From bac6d876839e56933cc9eba3c734bdc8187d2fcc Mon Sep 17 00:00:00 2001
From: Tony Paul <Tony_Paul@comcast.com>
Date: Thu, 14 Apr 2022 08:42:44 +0000
Subject: [PATCH 1/1] fix for switching from clear to encrypted and vice-versa

Signed-off-by: Tony Paul <Tony_Paul@comcast.com>
---
 gst/isomp4/qtdemux.c | 30 +++++++++++++++++++++++++-----
 1 file changed, 25 insertions(+), 5 deletions(-)

diff --git a/gst/isomp4/qtdemux.c b/gst/isomp4/qtdemux.c
index a8de084ff..adebcbda5 100644
--- a/gst/isomp4/qtdemux.c
+++ b/gst/isomp4/qtdemux.c
@@ -374,6 +374,8 @@ static void gst_qtdemux_append_protection_system_id (GstQTDemux * qtdemux,
 static void qtdemux_gst_structure_free (GstStructure * gststructure);
 static void gst_qtdemux_reset (GstQTDemux * qtdemux, gboolean hard);
 
+static void gst_qtdemux_stream_flush_crypto_info (QtDemuxStream * stream);
+
 static void
 gst_qtdemux_class_init (GstQTDemuxClass * klass)
 {
@@ -2070,6 +2072,7 @@ gst_qtdemux_reset (GstQTDemux * qtdemux, gboolean hard)
       stream->time_position = 0;
       stream->accumulated_base = 0;
       stream->last_keyframe_dts = GST_CLOCK_TIME_NONE;
+      gst_qtdemux_stream_flush_crypto_info (stream);
     }
     if (!qtdemux->pending_newsegment) {
         qtdemux->pending_newsegment = gst_event_new_segment (&qtdemux->segment);
@@ -2614,8 +2617,10 @@ gst_qtdemux_stream_clear (QtDemuxStream * stream)
           (QtDemuxCencSampleSetInfo *) stream->protection_scheme_info;
       if (info->default_properties)
         gst_structure_free (info->default_properties);
-      if (info->crypto_info)
+      if (info->crypto_info) {
         g_ptr_array_free (info->crypto_info, TRUE);
+	info->crypto_info = NULL;
+      }
     }
     g_free (stream->protection_scheme_info);
     stream->protection_scheme_info = NULL;
@@ -2627,10 +2632,10 @@ gst_qtdemux_stream_clear (QtDemuxStream * stream)
   g_queue_clear (&stream->protection_scheme_event_queue);
   gst_qtdemux_stream_flush_segments_data (stream);
   gst_qtdemux_stream_flush_samples_data (stream);
-  gst_qtdemux_stream_flush_crypto_info (stream);
+  //gst_qtdemux_stream_flush_crypto_info (stream);
   GstQTDemux *qtdemux = stream->demux;
-  if(!qtdemux->aamp_player_enabled)
-     stream->protected = FALSE;
+  if(qtdemux->aamp_player_enabled)
+     stream->protected = TRUE;
 
 }
 
@@ -5898,6 +5903,11 @@ gst_qtdemux_push_buffer (GstQTDemux * qtdemux, QtDemuxStream * stream,
   GstFlowReturn ret = GST_FLOW_OK;
   GstClockTime pts, duration;
 
+  if (qtdemux == NULL) {
+	  g_print("qtdemux is NULL");
+	  goto exit;
+  }
+
   if (stream->need_clip)
     buf = gst_qtdemux_clip_buffer (qtdemux, stream, buf);
 
@@ -5932,7 +5942,10 @@ gst_qtdemux_push_buffer (GstQTDemux * qtdemux, QtDemuxStream * stream,
       gst_pad_push_event (stream->pad, event);
     }
 
-    if (info->crypto_info == NULL) {
+    if (info == NULL)
+      GST_INFO_OBJECT(qtdemux, "info is NULL");
+
+    else if (info->crypto_info == NULL) {
       GST_DEBUG_OBJECT (qtdemux,
           "cenc metadata hasn't been parsed yet, pushing buffer as if it wasn't encrypted");
     } else {
@@ -8893,6 +8906,14 @@ gst_qtdemux_configure_stream (GstQTDemux * qtdemux, QtDemuxStream * stream)
 
     gst_pad_use_fixed_caps (stream->pad);
 
+    GST_DEBUG_OBJECT (qtdemux,
+            "stream-protected = %d", stream->protected);
+    if (qtdemux->aamp_player_enabled  && stream->protected == FALSE)
+      stream->protected = TRUE;
+
+    if (qtdemux->aamp_player_enabled)
+      stream->protection_scheme_type = FOURCC_cenc;
+
     if (stream->protected) {
       if (!gst_qtdemux_configure_protected_caps (qtdemux, stream)) {
         GST_ERROR_OBJECT (qtdemux,
-- 
2.25.1

