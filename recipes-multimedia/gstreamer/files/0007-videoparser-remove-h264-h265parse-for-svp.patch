Date: Sep 21 13:57:18 2017

From: f1d5000aba756e887d9804a31dc0d25d4eb9c2e6 Sep 21 16:38:44 2017

Subject: [PATCH] RDK-19714 : 4K DASH IP Linear/VOD Phase 1

	gstreamer-plugins-bad videoparser: support SVP and 4K

	When playing encrypted 4K content, Secure Video Path is required. 

	On Broadcom platform 16.2 and above, a secure buffer is introduced. 
	During decryption, decrypted video data is put into secure buffer 
	instead of general system memory, and SVP meta data is generated and
	pushed down GStreamer together with the original encrypted content.
	It's up	to the audio and video decoder to handle the encrypted data 
	with SVP meta data.
	Plugins which look into audio/video data need to be removed since 
	SOC plugins already cover video parser functionality.

Source: COMCAST

License: LGPL-2.1-or-later

Upstream-Status: Pending

Signed-off-by: Hao Li <hao_li@cable.comcast.com>

---


diff --git a/gst/videoparsers/Makefile.am b/gst/videoparsers/Makefile.am
index f81cc0e..eb5edaa 100644
--- a/gst/videoparsers/Makefile.am
+++ b/gst/videoparsers/Makefile.am
@@ -3,12 +3,11 @@ plugin_LTLIBRARIES = libgstvideoparsersbad.la
 libgstvideoparsersbad_la_SOURCES = plugin.c \
 	h263parse.c gsth263parse.c \
 	gstdiracparse.c dirac_parse.c \
-	gsth264parse.c gstmpegvideoparse.c \
+	gstmpegvideoparse.c \
 	gstmpeg4videoparse.c \
 	gstjpeg2000parse.c \
 	gstpngparse.c \
-	gstvc1parse.c \
-	gsth265parse.c
+	gstvc1parse.c
 
 libgstvideoparsersbad_la_CFLAGS = \
 	$(GST_PLUGINS_BAD_CFLAGS) $(GST_PLUGINS_BASE_CFLAGS) \
diff --git a/gst/videoparsers/plugin.c b/gst/videoparsers/plugin.c
index 2deddf4..cbdcf8f 100644
--- a/gst/videoparsers/plugin.c
+++ b/gst/videoparsers/plugin.c
@@ -39,8 +39,8 @@ plugin_init (GstPlugin * plugin)
 
   ret |= gst_element_register (plugin, "h263parse",
       GST_RANK_PRIMARY + 1, GST_TYPE_H263_PARSE);
-  ret |= gst_element_register (plugin, "h264parse",
-      GST_RANK_PRIMARY + 1, GST_TYPE_H264_PARSE);
+  //ret |= gst_element_register (plugin, "h264parse",
+  //    GST_RANK_PRIMARY + 1, GST_TYPE_H264_PARSE);
   ret |= gst_element_register (plugin, "diracparse",
       GST_RANK_NONE, GST_TYPE_DIRAC_PARSE);
   ret |= gst_element_register (plugin, "mpegvideoparse",
@@ -51,8 +51,8 @@ plugin_init (GstPlugin * plugin)
       GST_RANK_PRIMARY, GST_TYPE_PNG_PARSE);
   ret |= gst_element_register (plugin, "jpeg2000parse",
       GST_RANK_PRIMARY, GST_TYPE_JPEG2000_PARSE);
-  ret |= gst_element_register (plugin, "h265parse",
-      GST_RANK_SECONDARY, GST_TYPE_H265_PARSE);
+  //ret |= gst_element_register (plugin, "h265parse",
+  //    GST_RANK_SECONDARY, GST_TYPE_H265_PARSE);
   ret |= gst_element_register (plugin, "vc1parse",
       GST_RANK_NONE, GST_TYPE_VC1_PARSE);
 
