From c80fad58caf188d423b3acebf313366baee2937c Mon Sep 17 00:00:00 2001
From: Ievgen Mutavchi <Ievgen_Mutavchi@comcast.com>
Date: Mon, 11 May 2020 13:34:45 -0400
Subject: [PATCH] Accept wpe framework client identifier
Source: COMCAST
License: GPLV2
Upstream-Status: None
Signed-off-by: Eugene Mutavchi <Ievgen_Mutavchi@comcast.com>

---
 src/westeros/renderer-backend.cpp |  3 ++-
 src/westeros/view-backend.cpp     | 15 ++++++++++++++-
 2 files changed, 16 insertions(+), 2 deletions(-)

Index: git/src/westeros/renderer-backend.cpp
===================================================================
--- git.orig/src/westeros/renderer-backend.cpp
+++ git/src/westeros/renderer-backend.cpp
@@ -29,8 +29,9 @@
 
 #include <wpe/wpe-egl.h>
 
-#include <stdio.h>
+#include <cstdio>
 #include <cstring>
+#include <cstdlib>
 #include <glib.h>
 #include <wayland-client.h>
 #include <wayland-egl.h>
@@ -200,7 +201,8 @@ private:
 
 Backend::Backend()
 {
-    m_display = wl_display_connect(nullptr);
+    const char* targetDisplay = getenv("WAYLAND_DISPLAY");
+    m_display = wl_display_connect(targetDisplay);
     if (!m_display)
         return;
 
Index: git/src/westeros/view-backend.cpp
===================================================================
--- git.orig/src/westeros/view-backend.cpp
+++ git/src/westeros/view-backend.cpp
@@ -31,6 +31,7 @@
 #include "WesterosViewbackendOutput.h"
 #include <cstdio>
 #include <cstdlib>
+#include <cstring>
 #include <westeros-compositor.h>
 
 namespace Westeros {
@@ -61,9 +62,21 @@ ViewBackend::ViewBackend(struct wpe_view
     input_handler = new WesterosViewbackendInput(backend);
     output_handler = new WesterosViewbackendOutput(backend);
     const char* nestedTargetDisplay = std::getenv("WAYLAND_DISPLAY");
+    if (!nestedTargetDisplay)
+    {
+        const char* identifier = std::getenv("CLIENT_IDENTIFIER");
+        if (identifier)
+        {
+            const char* tmp = strchr(identifier, ',');
+            if (tmp)
+                nestedTargetDisplay = tmp + 1;
+            else
+                nestedTargetDisplay = identifier;
+        }
+    }
     if (nestedTargetDisplay)
     {
-        fprintf(stderr, "ViewBackendWesteros: running as the nested compositor\n");
+        fprintf(stderr, "ViewBackendWesteros: running as the nested compositor (target = '%s')\n", nestedTargetDisplay);
         WstCompositorSetIsNested(compositor, true);
         WstCompositorSetIsRepeater(compositor, true);
         WstCompositorSetNestedDisplayName(compositor, nestedTargetDisplay);
