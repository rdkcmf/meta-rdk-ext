From 6b173be37fcef0137c7559540c1a3d9fd8633ace Mon Sep 17 00:00:00 2001
From: Ievgen Mutavchi <Ievgen_Mutavchi@comcast.com>
Date: Thu, 7 May 2020 09:59:06 -0400
Subject: [PATCH] Dispatch events in glib context View was created
Source: COMCAST
License: GPLV2
Upstream-Status: None
Signed-off-by: Eugene Mutavchi <Ievgen_Mutavchi@comcast.com>

---
 src/westeros/WesterosViewbackendInput.cpp  | 35 +++++++++++++++---------------
 src/westeros/WesterosViewbackendInput.h    |  1 +
 src/westeros/WesterosViewbackendOutput.cpp | 13 ++++++-----
 src/westeros/WesterosViewbackendOutput.h   |  1 +
 4 files changed, 27 insertions(+), 23 deletions(-)

diff --git a/src/westeros/WesterosViewbackendInput.cpp b/src/westeros/WesterosViewbackendInput.cpp
index c055b31..291220c 100644
--- a/src/westeros/WesterosViewbackendInput.cpp
+++ b/src/westeros/WesterosViewbackendInput.cpp
@@ -140,7 +140,7 @@ void WesterosViewbackendInput::handleKeyEvent(void* userData, uint32_t key, uint
     g_ptr_array_add(me.m_keyEventDataArray, eventData);
     lock.unlock();
 
-    g_idle_add_full(G_PRIORITY_DEFAULT, [](gpointer data) -> gboolean
+    g_main_context_invoke(me.m_mainContext, [](gpointer data) -> gboolean
     {
         KeyEventData *e = (KeyEventData*)data;
 
@@ -221,7 +221,7 @@ void WesterosViewbackendInput::handleKeyEvent(void* userData, uint32_t key, uint
                 { e->time, keysym, e->key, !!e->state, modifiers };
         wpe_view_backend_dispatch_keyboard_event(backend_input.m_viewbackend, &event);
         return G_SOURCE_REMOVE;
-    }, eventData, nullptr);
+    }, eventData);
 }
 
 gboolean WesterosViewbackendInput::repeatRateTimeout(void* userData)
@@ -271,7 +271,7 @@ void WesterosViewbackendInput::pointerHandleMotion( void *userData, uint32_t tim
     g_ptr_array_add(me.m_motionEventDataArray, eventData);
     lock.unlock();
 
-    g_idle_add_full(G_PRIORITY_DEFAULT, [](gpointer data) -> gboolean
+    g_main_context_invoke(me.m_mainContext, [](gpointer data) -> gboolean
     {
         MotionEventData *e = (MotionEventData*)data;
 
@@ -293,7 +293,7 @@ void WesterosViewbackendInput::pointerHandleMotion( void *userData, uint32_t tim
         lock.unlock();
         delete e;
         return G_SOURCE_REMOVE;
-    }, eventData, nullptr);
+    }, eventData);
 }
 
 struct ButtonEventData
@@ -317,7 +317,7 @@ void WesterosViewbackendInput::pointerHandleButton( void *userData, uint32_t tim
     g_ptr_array_add(me.m_buttonEventDataArray, eventData);
     lock.unlock();
 
-    g_idle_add_full(G_PRIORITY_DEFAULT, [](gpointer data) -> gboolean
+    g_main_context_invoke(me.m_mainContext, [](gpointer data) -> gboolean
     {
         ButtonEventData *e = (ButtonEventData*)data;
 
@@ -336,7 +336,7 @@ void WesterosViewbackendInput::pointerHandleButton( void *userData, uint32_t tim
         lock.unlock();
         delete e;
         return G_SOURCE_REMOVE;
-    }, eventData, nullptr);
+    }, eventData);
 }
 
 struct AxisEventData
@@ -358,7 +358,7 @@ void WesterosViewbackendInput::pointerHandleAxis( void *userData, uint32_t time,
     g_ptr_array_add(me.m_axisEventDataArray, eventData);
     lock.unlock();
 
-    g_idle_add_full(G_PRIORITY_DEFAULT, [](gpointer data) -> gboolean
+    g_main_context_invoke(me.m_mainContext, [](gpointer data) -> gboolean
     {
         AxisEventData *e = (AxisEventData*)data;
 
@@ -376,7 +376,7 @@ void WesterosViewbackendInput::pointerHandleAxis( void *userData, uint32_t time,
         lock.unlock();
         delete e;
         return G_SOURCE_REMOVE;
-    }, eventData, nullptr);
+    }, eventData);
 }
 
 WesterosViewbackendInput::WesterosViewbackendInput(struct wpe_view_backend* backend)
@@ -387,6 +387,7 @@ WesterosViewbackendInput::WesterosViewbackendInput(struct wpe_view_backend* back
  , m_motionEventDataArray(g_ptr_array_sized_new(4))
  , m_buttonEventDataArray(g_ptr_array_sized_new(4))
  , m_axisEventDataArray(g_ptr_array_sized_new(4))
+ , m_mainContext(g_main_context_get_thread_default())
 {
 }
 
@@ -425,7 +426,7 @@ void clearArray(GPtrArray *array)
     {
         g_ptr_array_foreach(array, [](gpointer data, gpointer user_data)
         {
-            g_idle_remove_by_data(data);
+            g_source_remove_by_user_data(data);
             delete (Data*)data;
         }, nullptr);
     }
@@ -433,18 +434,18 @@ void clearArray(GPtrArray *array)
 }
 
 template<class Data>
-void clearArraySafe(GPtrArray *array)
+void clearArraySafe(GMainContext *ctx, GPtrArray *array)
 {
-    g_idle_add_full(G_PRIORITY_HIGH, [](gpointer data) -> gboolean
+    g_main_context_invoke(ctx, [](gpointer data) -> gboolean
     {
         clearArray<Data>((GPtrArray*)data);
         return G_SOURCE_REMOVE;
-    }, array, nullptr);
+    }, array);
 }
 
 void WesterosViewbackendInput::clearDataArrays()
 {
-    if (g_main_context_is_owner(g_main_context_default()))
+    if (g_main_context_is_owner(m_mainContext))
     {
         clearArray<KeyEventData>(m_keyEventDataArray);
         clearArray<MotionEventData>(m_motionEventDataArray);
@@ -453,10 +454,10 @@ void WesterosViewbackendInput::clearDataArrays()
     }
     else
     {
-        clearArraySafe<KeyEventData>(m_keyEventDataArray);
-        clearArraySafe<MotionEventData>(m_motionEventDataArray);
-        clearArraySafe<ButtonEventData>(m_buttonEventDataArray);
-        clearArraySafe<AxisEventData>(m_axisEventDataArray);
+        clearArraySafe<KeyEventData>(m_mainContext, m_keyEventDataArray);
+        clearArraySafe<MotionEventData>(m_mainContext, m_motionEventDataArray);
+        clearArraySafe<ButtonEventData>(m_mainContext, m_buttonEventDataArray);
+        clearArraySafe<AxisEventData>(m_mainContext, m_axisEventDataArray);
     }
 }
 
diff --git a/src/westeros/WesterosViewbackendInput.h b/src/westeros/WesterosViewbackendInput.h
index ce800b3..6787b00 100644
--- a/src/westeros/WesterosViewbackendInput.h
+++ b/src/westeros/WesterosViewbackendInput.h
@@ -64,6 +64,7 @@ private:
     GPtrArray* m_motionEventDataArray;
     GPtrArray* m_buttonEventDataArray;
     GPtrArray* m_axisEventDataArray;
+    GMainContext *m_mainContext;
 };
 
 } // namespace Westeros
diff --git a/src/westeros/WesterosViewbackendOutput.cpp b/src/westeros/WesterosViewbackendOutput.cpp
index 170a9c9..56051c7 100644
--- a/src/westeros/WesterosViewbackendOutput.cpp
+++ b/src/westeros/WesterosViewbackendOutput.cpp
@@ -40,7 +40,7 @@ void WesterosViewbackendOutput::handleModeCallback( void *userData, uint32_t fla
     ModeData *modeData = new ModeData { userData, width, height };
     g_ptr_array_add(me.m_modeDataArray, modeData);
 
-    g_idle_add_full(G_PRIORITY_DEFAULT, [](gpointer data) -> gboolean
+    g_main_context_invoke(me.m_mainContext, [](gpointer data) -> gboolean
     {
         ModeData *d = (ModeData*)data;
 
@@ -52,7 +52,7 @@ void WesterosViewbackendOutput::handleModeCallback( void *userData, uint32_t fla
         g_ptr_array_remove_fast(backend_output.m_modeDataArray, data);
         delete d;
         return G_SOURCE_REMOVE;
-    }, modeData, nullptr);
+    }, modeData);
 }
 
 void WesterosViewbackendOutput::handleDoneCallback( void *UserData )
@@ -69,6 +69,7 @@ WesterosViewbackendOutput::WesterosViewbackendOutput(struct wpe_view_backend* ba
  , m_width(800)
  , m_height(600)
  , m_modeDataArray(g_ptr_array_sized_new(4))
+ , m_mainContext(g_main_context_get_thread_default())
 {
 }
 
@@ -103,7 +104,7 @@ static void clearArray(GPtrArray *array)
     {
         g_ptr_array_foreach(array, [](gpointer data, gpointer user_data)
         {
-            g_idle_remove_by_data(data);
+            g_source_remove_by_user_data(data);
             delete (ModeData*)data;
         }, nullptr);
     }
@@ -112,17 +113,17 @@ static void clearArray(GPtrArray *array)
 
 void WesterosViewbackendOutput::clearDataArray()
 {
-    if (g_main_context_is_owner(g_main_context_default()))
+    if (g_main_context_is_owner(m_mainContext))
     {
         clearArray(m_modeDataArray);
     }
     else
     {
-        g_idle_add_full(G_PRIORITY_HIGH, [](gpointer data) -> gboolean
+        g_main_context_invoke(m_mainContext, [](gpointer data) -> gboolean
         {
             clearArray((GPtrArray*)data);
             return G_SOURCE_REMOVE;
-        }, m_modeDataArray, nullptr);
+        }, m_modeDataArray);
     }
 }
 
diff --git a/src/westeros/WesterosViewbackendOutput.h b/src/westeros/WesterosViewbackendOutput.h
index 607314b..1b85a84 100644
--- a/src/westeros/WesterosViewbackendOutput.h
+++ b/src/westeros/WesterosViewbackendOutput.h
@@ -36,6 +36,7 @@ private:
     uint32_t m_width;
     uint32_t m_height;
     GPtrArray* m_modeDataArray;
+    GMainContext *m_mainContext;
 };
 
 } // namespace Westeros
-- 
2.7.4

