From 154984fd4340d566d2b5494a9ad4fe137c9f50ad Mon Sep 17 00:00:00 2001
From: Miguel Gomez <magomez@igalia.com>
Date: Fri, 27 Aug 2021 16:26:38 +0200
Subject: [PATCH] During layout, ensure that elements that are in different
 RenderLayers are updated.

---
 .../WebCore/rendering/RenderBlockLineLayout.cpp | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/Source/WebCore/rendering/RenderBlockLineLayout.cpp b/Source/WebCore/rendering/RenderBlockLineLayout.cpp
index f13800666524..eceb60b907b0 100644
--- a/Source/WebCore/rendering/RenderBlockLineLayout.cpp
+++ b/Source/WebCore/rendering/RenderBlockLineLayout.cpp
@@ -175,6 +175,19 @@ static inline void dirtyLineBoxesForRenderer(RenderObject& renderer, bool fullLa
         downcast<RenderInline>(renderer).dirtyLineBoxes(fullLayout);
 }
 
+static inline void requestRepaintForRendererIfNeeded(RenderObject* container, RenderObject& renderer)
+{
+    if (!container->enclosingLayer() || !renderer.enclosingLayer())
+        return;
+
+    // It can happen that this RenderBlock is doing the layout for a renderer that is not in the same RenderLayer. Due to
+    // this, the layout will invalidate its layer instead of the renderer's layer. If the layout doesn't change the size
+    // or position of the renderer, then it won't be repainted when repainting its layer. To avoid this, request a repaint
+    // of the renderer so its layer is always repainted.
+
+    if (renderer.enclosingLayer() != container->enclosingLayer())
+        renderer.repaint();
+}
 static bool parentIsConstructedOrHaveNext(InlineFlowBox* parentBox)
 {
     do {
@@ -1710,8 +1723,10 @@ void RenderBlockFlow::layoutLineBoxes(bool relayoutChildren, LayoutUnit& repaint
             } else if (o.isTextOrLineBreak() || (is<RenderInline>(o) && !walker.atEndOfInline())) {
                 if (is<RenderInline>(o))
                     downcast<RenderInline>(o).updateAlwaysCreateLineBoxes(layoutState.isFullLayout());
-                if (layoutState.isFullLayout() || o.selfNeedsLayout())
+                if (layoutState.isFullLayout() || o.selfNeedsLayout()) {
+                    requestRepaintForRendererIfNeeded(this, o);
                     dirtyLineBoxesForRenderer(o, layoutState.isFullLayout());
+                }
                 o.clearNeedsLayout();
             }
         }
-- 
2.25.1

