Date: Feb 25 09:44:14 2019 

From: b1c3c3219d7dac8ceb2f1bedfa1494635e04ed25 Feb 25 13:37:48 2019

Subject: [PATCH] XRE-13889: enable intl support and fix video hole punching in NBCU OTT app

	NBCU OTT app support

Source: COMCAST

License: BSD-2-Clause

Upstream-Status: Pending

Signed-off-by: Eugene Mutavchi <Ievgen_Mutavchi@comcast.com>
---

 .../CoordinatedGraphicsScene.cpp                   | 22 +++++++++++++++-------
 .../CoordinatedGraphics/CoordinatedGraphicsScene.h |  9 ++++++---
 2 files changed, 21 insertions(+), 10 deletions(-)

diff --git a/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.cpp b/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.cpp
index ccd3b8e..638a589 100644
--- a/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.cpp
+++ b/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.cpp
@@ -155,13 +155,14 @@ void CoordinatedGraphicsScene::adjustPositionForFixedLayers(const FloatPoint& co
         fixedLayer->setScrollPositionDeltaIfNeeded(delta);
 }
 
-void CoordinatedGraphicsScene::syncPlatformLayerIfNeeded(TextureMapperLayer* layer, const CoordinatedGraphicsLayerState& state)
+void CoordinatedGraphicsScene::syncPlatformLayerIfNeeded(TextureMapperLayer* layer, const CoordinatedGraphicsLayerState& state, CommitScope& commitScope)
 {
 #if USE(COORDINATED_GRAPHICS_THREADED)
     if (!state.platformLayerChanged)
         return;
 
     if (state.platformLayerProxy) {
+        commitScope.releasedPlatformLayerProxies.remove(state.platformLayerProxy);
         m_platformLayerProxies.set(layer, state.platformLayerProxy);
         state.platformLayerProxy->activateOnCompositingThread(this, layer);
     } else
@@ -169,6 +170,7 @@ void CoordinatedGraphicsScene::syncPlatformLayerIfNeeded(TextureMapperLayer* lay
 #else
     UNUSED_PARAM(layer);
     UNUSED_PARAM(state);
+    UNUSED_PARAM(commitScope);
 #endif
 }
 
@@ -295,7 +297,7 @@ void CoordinatedGraphicsScene::setLayerState(CoordinatedLayerID id, const Coordi
     createTilesIfNeeded(layer, layerState);
     removeTilesIfNeeded(layer, layerState, commitScope);
     updateTilesIfNeeded(layer, layerState, commitScope);
-    syncPlatformLayerIfNeeded(layer, layerState);
+    syncPlatformLayerIfNeeded(layer, layerState, commitScope);
     setLayerRepaintCountIfNeeded(layer, layerState);
 }
 
@@ -318,13 +320,13 @@ void CoordinatedGraphicsScene::createLayer(CoordinatedLayerID id)
     m_layers.add(id, WTFMove(newLayer));
 }
 
-void CoordinatedGraphicsScene::deleteLayers(const Vector<CoordinatedLayerID>& layerIDs)
+void CoordinatedGraphicsScene::deleteLayers(const Vector<CoordinatedLayerID>& layerIDs, CommitScope& commitScope)
 {
     for (auto& layerID : layerIDs)
-        deleteLayer(layerID);
+        deleteLayer(layerID, commitScope);
 }
 
-void CoordinatedGraphicsScene::deleteLayer(CoordinatedLayerID layerID)
+void CoordinatedGraphicsScene::deleteLayer(CoordinatedLayerID layerID, CommitScope& commitScope)
 {
     std::unique_ptr<TextureMapperLayer> layer = m_layers.take(layerID);
     ASSERT(layer);
@@ -333,7 +335,9 @@ void CoordinatedGraphicsScene::deleteLayer(CoordinatedLayerID layerID)
     m_fixedLayers.remove(layerID);
 #if USE(COORDINATED_GRAPHICS_THREADED)
     if (auto platformLayerProxy = m_platformLayerProxies.take(layer.get()))
-        platformLayerProxy->invalidate();
+        commitScope.releasedPlatformLayerProxies.add(platformLayerProxy);
+#else
+    UNUSED_PARAM(commitScope);
 #endif
 }
 
@@ -511,7 +515,7 @@ void CoordinatedGraphicsScene::commitSceneState(const CoordinatedGraphicsState&
     m_renderedContentsScrollPosition = state.scrollPosition;
 
     createLayers(state.layersToCreate);
-    deleteLayers(state.layersToRemove);
+    deleteLayers(state.layersToRemove, commitScope);
 
     if (state.rootCompositingLayer != m_rootLayerID)
         setRootLayerID(state.rootCompositingLayer);
@@ -526,6 +530,10 @@ void CoordinatedGraphicsScene::commitSceneState(const CoordinatedGraphicsState&
 
     commitScope.releasedImageBackings.clear();
     commitScope.backingStoresWithPendingBuffers.clear();
+#if USE(COORDINATED_GRAPHICS_THREADED)
+    for (auto& proxy : commitScope.releasedPlatformLayerProxies)
+        proxy->invalidate();
+#endif
 }
 
 void CoordinatedGraphicsScene::renderNextFrame()
diff --git a/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.h b/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.h
index 5d5a615..28b527b 100644
--- a/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.h
+++ b/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.h
@@ -102,11 +102,14 @@ private:
 
         Vector<RefPtr<CoordinatedBackingStore>> releasedImageBackings;
         HashSet<RefPtr<CoordinatedBackingStore>> backingStoresWithPendingBuffers;
+#if USE(COORDINATED_GRAPHICS_THREADED)
+        HashSet<RefPtr<WebCore::TextureMapperPlatformLayerProxy>> releasedPlatformLayerProxies;
+#endif
     };
 
     void setRootLayerID(WebCore::CoordinatedLayerID);
     void createLayers(const Vector<WebCore::CoordinatedLayerID>&);
-    void deleteLayers(const Vector<WebCore::CoordinatedLayerID>&);
+    void deleteLayers(const Vector<WebCore::CoordinatedLayerID>&, CommitScope&);
     void setLayerState(WebCore::CoordinatedLayerID, const WebCore::CoordinatedGraphicsLayerState&, CommitScope&);
     void setLayerChildrenIfNeeded(WebCore::TextureMapperLayer*, const WebCore::CoordinatedGraphicsLayerState&);
     void updateTilesIfNeeded(WebCore::TextureMapperLayer*, const WebCore::CoordinatedGraphicsLayerState&, CommitScope&);
@@ -114,7 +117,7 @@ private:
     void removeTilesIfNeeded(WebCore::TextureMapperLayer*, const WebCore::CoordinatedGraphicsLayerState&, CommitScope&);
     void setLayerFiltersIfNeeded(WebCore::TextureMapperLayer*, const WebCore::CoordinatedGraphicsLayerState&);
     void setLayerAnimationsIfNeeded(WebCore::TextureMapperLayer*, const WebCore::CoordinatedGraphicsLayerState&);
-    void syncPlatformLayerIfNeeded(WebCore::TextureMapperLayer*, const WebCore::CoordinatedGraphicsLayerState&);
+    void syncPlatformLayerIfNeeded(WebCore::TextureMapperLayer*, const WebCore::CoordinatedGraphicsLayerState&, CommitScope&);
     void setLayerRepaintCountIfNeeded(WebCore::TextureMapperLayer*, const WebCore::CoordinatedGraphicsLayerState&);
 
     void syncImageBackings(const WebCore::CoordinatedGraphicsState&, CommitScope&);
@@ -139,7 +142,7 @@ private:
     void updateViewport();
 
     void createLayer(WebCore::CoordinatedLayerID);
-    void deleteLayer(WebCore::CoordinatedLayerID);
+    void deleteLayer(WebCore::CoordinatedLayerID, CommitScope&);
 
     void assignImageBackingToLayer(WebCore::TextureMapperLayer*, WebCore::CoordinatedImageBackingID);
     void ensureRootLayer();
-- 
2.7.4

