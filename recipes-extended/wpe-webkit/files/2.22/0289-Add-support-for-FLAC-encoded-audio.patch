From 1c9f40b5dd746b61d004256855f41da8c8a7a1d0 Mon Sep 17 00:00:00 2001
From: Filipe Norte <filipe.norte@sky.uk>
Date: Wed, 27 Oct 2021 17:51:52 +0000
Subject: [PATCH] Add support for FLAC encoded audio

Reason for change: Support playback of FLAC encoded audio
Test Procedure: Check FLAC encoded audio streams play
Risks: Low
---
 .../gstreamer/eme/WebKitOpenCDMDecryptorGStreamer.cpp  |  3 ++-
 .../gstreamer/mse/MediaPlayerPrivateGStreamerMSE.cpp   | 10 ++++++----
 2 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitOpenCDMDecryptorGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitOpenCDMDecryptorGStreamer.cpp
index b63d7a058d1a..7727df4d4c5b 100644
--- a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitOpenCDMDecryptorGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitOpenCDMDecryptorGStreamer.cpp
@@ -48,7 +48,7 @@ static bool webKitMediaOpenCDMDecryptorDecrypt(WebKitMediaCommonEncryptionDecryp
 static bool webKitMediaOpenCDMDecryptorHandleKeyId(WebKitMediaCommonEncryptionDecrypt* self, const WebCore::SharedBuffer&);
 static bool webKitMediaOpenCDMDecryptorAttemptToDecryptWithLocalInstance(WebKitMediaCommonEncryptionDecrypt* self, const WebCore::SharedBuffer&);
 
-static const char* cencEncryptionMediaTypes[] = { "video/mp4", "audio/mp4", "video/x-h264", "audio/mpeg", "audio/x-eac3", "audio/x-ac3", "video/x-h265", nullptr };
+static const char* cencEncryptionMediaTypes[] = { "video/mp4", "audio/mp4", "video/x-h264", "audio/mpeg", "audio/x-eac3", "audio/x-ac3", "video/x-h265", "audio/x-flac", nullptr };
 static const char* webmEncryptionMediaTypes[] = { "video/webm", "audio/webm", "video/x-vp9", nullptr };
 
 static GstStaticPadTemplate srcTemplate = GST_STATIC_PAD_TEMPLATE("src",
@@ -62,6 +62,7 @@ static GstStaticPadTemplate srcTemplate = GST_STATIC_PAD_TEMPLATE("src",
         "audio/mpeg; "
         "audio/x-eac3; "
         "audio/x-ac3; "
+        "audio/x-flac; "
         "video/x-h264; "
         "video/x-h265; "
         "video/x-vp9; "));
diff --git a/Source/WebCore/platform/graphics/gstreamer/mse/MediaPlayerPrivateGStreamerMSE.cpp b/Source/WebCore/platform/graphics/gstreamer/mse/MediaPlayerPrivateGStreamerMSE.cpp
index 2879ac72b822..c6b720bf5605 100644
--- a/Source/WebCore/platform/graphics/gstreamer/mse/MediaPlayerPrivateGStreamerMSE.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/mse/MediaPlayerPrivateGStreamerMSE.cpp
@@ -968,7 +968,7 @@ const static HashSet<AtomicString>& codecSet()
         };
 
 #if USE(SVP) || ENABLE(HEVC)
-        std::array<GstCapsWebKitMapping, 11> mapping = { {
+        std::array<GstCapsWebKitMapping, 12> mapping = { {
             { VideoDecoder, "video/x-h264,  profile=(string){ constrained-baseline, baseline }", { "x-h264" } },
             { VideoDecoder, "video/x-h264, stream-format=avc", { "avc*"} },
             // An autoplugged h264parse in decodebin can convert from byte-stream to avc.
@@ -980,10 +980,11 @@ const static HashSet<AtomicString>& codecSet()
             { AudioDecoder, "audio/x-vorbis", { "vorbis", "x-vorbis" } },
             { AudioDecoder, "audio/x-opus", { "opus", "x-opus" } },
             { AudioDecoder, "audio/x-ac3", {"x-ac3", "ac3" } },
-            { AudioDecoder, "audio/x-eac3", {"x-eac3", "ec3", "ec-3", "eac3"} }
+            { AudioDecoder, "audio/x-eac3", {"x-eac3", "ec3", "ec-3", "eac3"} },
+            { AudioDecoder, "audio/x-flac", {"x-flac", "flac"} }
         } };
 #else
-        std::array<GstCapsWebKitMapping, 10> mapping = { {
+        std::array<GstCapsWebKitMapping, 11> mapping = { {
             { VideoDecoder, "video/x-h264,  profile=(string){ constrained-baseline, baseline }", { "x-h264" } },
             { VideoDecoder, "video/x-h264, stream-format=avc", { "avc*"} },
             // An autoplugged h264parse in decodebin can convert from byte-stream to avc.
@@ -994,7 +995,8 @@ const static HashSet<AtomicString>& codecSet()
             { AudioDecoder, "audio/x-vorbis", { "vorbis", "x-vorbis" } },
             { AudioDecoder, "audio/x-opus", { "opus", "x-opus" } },
             { AudioDecoder, "audio/x-ac3", {"x-ac3", "ac3" } },
-            { AudioDecoder, "audio/x-eac3", {"x-eac3", "ec3", "ec-3", "eac3"} }
+            { AudioDecoder, "audio/x-eac3", {"x-eac3", "ec3", "ec-3", "eac3"} },
+            { AudioDecoder, "audio/x-flac", {"x-flac", "flac"} }
         } };
 #endif
         for (auto& current : mapping) {
-- 
2.29.0

