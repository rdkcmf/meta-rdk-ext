From 063b42201cc9666abb18a9548aff63210f827368 Mon Sep 17 00:00:00 2001
From: Eugene Mutavchi <Ievgen_Mutavchi@comcast.com>
Date: Fri, 29 Jan 2021 02:22:20 +0000
Subject: [PATCH] Fix use-after-free on dynamic switch from non-composited to
 normal mode

---
 .../graphics/texmap/TextureMapperPlatformLayerProxy.cpp   | 7 ++++++-
 .../graphics/texmap/TextureMapperPlatformLayerProxy.h     | 2 +-
 .../CoordinatedGraphics/CoordinatedGraphicsScene.cpp      | 8 +++++++-
 .../threadedcompositor/ThreadedCompositor.cpp             | 4 ++++
 4 files changed, 18 insertions(+), 3 deletions(-)

Index: git/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.cpp
===================================================================
--- git.orig/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.cpp
+++ git/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.cpp
@@ -79,9 +79,14 @@ void TextureMapperPlatformLayerProxy::ac
 #endif
 }
 
-void TextureMapperPlatformLayerProxy::invalidate()
+void TextureMapperPlatformLayerProxy::invalidate(bool layerOnly)
 {
     ASSERT(m_compositorThread == &Thread::current());
+    if (layerOnly) {
+        LockHolder locker(m_lock);
+        m_targetLayer = nullptr;
+        return;
+    }
     Function<void()> updateFunction;
     {
         LockHolder locker(m_lock);
Index: git/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.h
===================================================================
--- git.orig/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.h
+++ git/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.h
@@ -66,7 +66,7 @@ public:
     bool isActive();
 
     WEBCORE_EXPORT void activateOnCompositingThread(Compositor*, TextureMapperLayer*);
-    WEBCORE_EXPORT void invalidate();
+    WEBCORE_EXPORT void invalidate(bool layerOnly = false);
 
     WEBCORE_EXPORT void swapBuffer();
     void dropCurrentBufferWhilePreservingTexture();
Index: git/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.cpp
===================================================================
--- git.orig/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.cpp
+++ git/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.cpp
@@ -257,8 +257,10 @@ void CoordinatedGraphicsScene::deleteLay
 
     m_backingStores.remove(layer.get());
 #if USE(COORDINATED_GRAPHICS_THREADED)
-    if (auto platformLayerProxy = m_platformLayerProxies.take(layer.get()))
+    if (auto platformLayerProxy = m_platformLayerProxies.take(layer.get())) {
+        platformLayerProxy->invalidate(true);
         commitScope.releasedPlatformLayerProxies.add(platformLayerProxy);
+    }
 #else
     UNUSED_PARAM(commitScope);
 #endif
@@ -525,6 +527,11 @@ void CoordinatedGraphicsScene::applyStat
 
         for (auto& layer : state.layersToUpdate)
             setLayerState(layer.first, layer.second, commitScope);
+
+#if USE(COORDINATED_GRAPHICS_THREADED)
+        for (auto& proxy : commitScope.releasedPlatformLayerProxies)
+            proxy->invalidate();
+#endif
     }
 
     TextureMapperLayer* currentRootLayer = rootLayer();
Index: git/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
===================================================================
--- git.orig/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
+++ git/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
@@ -113,9 +113,13 @@ void ThreadedCompositor::invalidate()
 #if USE(REQUEST_ANIMATION_FRAME_DISPLAY_MONITOR)
     m_displayRefreshMonitor->invalidate();
 #endif
+    if (m_nonCompositedWebGLEnabled) {
+        m_scene->purgeGLResources();
+    }
     m_compositingRunLoop->performTaskSync([this, protectedThis = makeRef(*this)] {
         if (!m_context || !m_context->makeContextCurrent()) {
             m_client.didDestroyGLContext();
+            m_scene = nullptr;
             return;
         }
         m_scene->purgeGLResources();
