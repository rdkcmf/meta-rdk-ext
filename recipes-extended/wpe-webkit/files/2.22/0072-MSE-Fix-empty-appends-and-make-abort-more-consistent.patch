From 6d1f6197b06a36d40fc5b63d92c0a4446ab2a6e6 Mon Sep 17 00:00:00 2001
From: Siva Sankar Raja <sivasankar_raja@comcast.com>
Source: COMCAST
License: LICENSE-LGPL-2.1
Upstream-Status: Pending
Signed-off-by: Siva Sankar Raja <sivasankar_raja@comcast.com>
Date: Tue, 9 Jul 2019 15:46:58 +0000
Subject: [PATCH] MSE-Fix-empty-appends-and-make-abort-more-consistent

---
 .../WebCore/Modules/mediasource/SourceBuffer.cpp   |  1 +
 .../graphics/gstreamer/mse/AppendPipeline.cpp      | 47 +++++++++++++++++++---
 .../graphics/gstreamer/mse/AppendPipeline.h        |  1 +
 3 files changed, 44 insertions(+), 5 deletions(-)

Index: git/Source/WebCore/Modules/mediasource/SourceBuffer.cpp
===================================================================
--- git.orig/Source/WebCore/Modules/mediasource/SourceBuffer.cpp
+++ git/Source/WebCore/Modules/mediasource/SourceBuffer.cpp
@@ -431,6 +431,7 @@ void SourceBuffer::removedFromMediaSourc
 
     m_private->removedFromMediaSource();
     m_source = nullptr;
+    m_asyncEventQueue.cancelAllEvents();
 }
 
 void SourceBuffer::seekToTime(const MediaTime& time)
Index: git/Source/WebCore/platform/graphics/gstreamer/mse/AppendPipeline.cpp
===================================================================
--- git.orig/Source/WebCore/platform/graphics/gstreamer/mse/AppendPipeline.cpp
+++ git/Source/WebCore/platform/graphics/gstreamer/mse/AppendPipeline.cpp
@@ -590,11 +590,12 @@ void AppendPipeline::setAppendState(Appe
         case AppendState::DataStarve:
             ok = true;
             GST_DEBUG("received all pending samples");
-            m_sourceBufferPrivate->didReceiveAllPendingSamples();
             if (m_abortPending)
                 nextAppendState = AppendState::Aborting;
-            else
+            else{
+                m_sourceBufferPrivate->didReceiveAllPendingSamples();
                 nextAppendState = AppendState::NotStarted;
+            }
             break;
         default:
             break;
@@ -623,11 +624,12 @@ void AppendPipeline::setAppendState(Appe
         case AppendState::LastSample:
             ok = true;
             GST_DEBUG("received all pending samples");
-            m_sourceBufferPrivate->didReceiveAllPendingSamples();
             if (m_abortPending)
                 nextAppendState = AppendState::Aborting;
-            else
+            else {
+                m_sourceBufferPrivate->didReceiveAllPendingSamples();
                 nextAppendState = AppendState::NotStarted;
+            }
             break;
         default:
             break;
@@ -838,6 +840,8 @@ void AppendPipeline::appsinkEOS()
 void AppendPipeline::didReceiveInitializationSegment()
 {
     ASSERT(WTF::isMainThread());
+    if (m_abortPending)
+        return;
 
     WebCore::SourceBufferPrivateClient::InitializationSegment initializationSegment;
 
@@ -924,7 +928,22 @@ void AppendPipeline::abort()
     m_abortPending = true;
     if (m_appendState == AppendState::NotStarted)
         setAppendState(AppendState::Aborting);
-    // Else, the automatic state transitions will take care when the ongoing append finishes.
+    else {
+        // Wait for append state change
+        for (int i = 0; m_appendState == AppendState::Ongoing && i < 100; ++i) {
+            drainBusIfNeeded();
+            WTF::sleep(10_ms);
+        }
+        // Drain samples before source buffer state is reset
+        if (m_appendState == AppendState::Sampling) {
+            GRefPtr<GstPad> appsrcPad = adoptGRef(gst_element_get_static_pad(m_appsrc.get(), "src"));
+            if (appsrcPad) {
+                GRefPtr<GstQuery> query = adoptGRef(gst_query_new_drain());
+                gst_pad_peer_query(appsrcPad.get(), query.get());
+            }
+            drainBusIfNeeded();
+        }
+    }
 }
 
 GstFlowReturn AppendPipeline::pushNewBuffer(GstBuffer* buffer)
@@ -1238,6 +1257,24 @@ void AppendPipeline::appendPipelineDemux
     GST_TRACE("appendPipelineDemuxerNoMorePadsFromAnyThread - posted to bus");
 }
 
+void AppendPipeline::drainBusIfNeeded()
+{
+    if (m_appendState == AppendState::Invalid || m_appendState == AppendState::NotStarted)
+        return;
+
+    GstBus *bus = m_bus.get();
+    if (UNLIKELY (bus == nullptr))
+        return;
+
+    while(gst_bus_have_pending(bus)) {
+        GstMessage *message = gst_bus_pop(bus);
+        if (UNLIKELY (message == nullptr))
+            break;
+        gst_bus_async_signal_func(bus, message, nullptr);
+        gst_message_unref (message);
+    }
+}
+
 static void appendPipelineAppsinkCapsChanged(GObject* appsinkPad, GParamSpec*, AppendPipeline* appendPipeline)
 {
     GstStructure* structure = gst_structure_new_empty("appsink-caps-changed");
Index: git/Source/WebCore/platform/graphics/gstreamer/mse/AppendPipeline.h
===================================================================
--- git.orig/Source/WebCore/platform/graphics/gstreamer/mse/AppendPipeline.h
+++ git/Source/WebCore/platform/graphics/gstreamer/mse/AppendPipeline.h
@@ -101,6 +101,7 @@ public:
 #endif
 
 private:
+    void drainBusIfNeeded();
     void resetPipeline();
     void checkEndOfAppend();
     void handleAppsrcAtLeastABufferLeft();
