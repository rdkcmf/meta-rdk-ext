From 6dbbabb9bd47e8cf78ba1a8d958c0e6a1b667fb9 Mon Sep 17 00:00:00 2001
From: Eugene Mutavchi <Ievgen_Mutavchi@comcast.com>
Date: Mon, 9 Aug 2021 20:51:11 +0000
Subject: [PATCH 4/5] Fix use-after-free in GstMappedBuffer destructor

---
 .../eme/WebKitCommonEncryptionDecryptorGStreamer.cpp  | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp
index e78a33dd5a23..6241abd4fde4 100644
--- a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp
@@ -244,16 +244,15 @@ static GstFlowReturn webkitMediaCommonEncryptionDecryptTransformInPlace(GstBaseT
 
     const GValue* value;
     value = gst_structure_get_value(protectionMeta->info, "kid");
-    GstBuffer* keyIDBuffer = nullptr;
     if (!value) {
         GST_ELEMENT_ERROR (self, STREAM, DECRYPT_NOKEY, ("No key ID available for encrypted sample"), (NULL));
         return GST_FLOW_NOT_SUPPORTED;
     }
 
-    keyIDBuffer = gst_value_get_buffer(value);
+    GRefPtr<GstBuffer> keyIDBuffer = gst_value_get_buffer(value);
 
     if (!priv->m_protectionEvents.isEmpty()) {
-        GstMappedBuffer mappedKeyID(keyIDBuffer, GST_MAP_READ);
+        GstMappedBuffer mappedKeyID(keyIDBuffer.get(), GST_MAP_READ);
         if (!mappedKeyID) {
             GST_ELEMENT_ERROR (self, STREAM, FAILED, ("Failed to map key ID buffer."), (NULL));
             return GST_FLOW_NOT_SUPPORTED;
@@ -340,7 +339,7 @@ static GstFlowReturn webkitMediaCommonEncryptionDecryptTransformInPlace(GstBaseT
 
 #ifndef GST_DISABLE_GST_DEBUG
     if (gst_debug_category_get_threshold(GST_CAT_DEFAULT) >= GST_LEVEL_MEMDUMP) {
-        GstMappedBuffer mappedKeyID(keyIDBuffer, GST_MAP_READ);
+        GstMappedBuffer mappedKeyID(keyIDBuffer.get(), GST_MAP_READ);
         if (!mappedKeyID) {
             GST_ERROR_OBJECT(self, "failed to map key ID buffer");
             return GST_FLOW_NOT_SUPPORTED;
@@ -350,7 +349,7 @@ static GstFlowReturn webkitMediaCommonEncryptionDecryptTransformInPlace(GstBaseT
 #endif
 
     WebKitMediaCommonEncryptionDecryptClass* klass = WEBKIT_MEDIA_CENC_DECRYPT_GET_CLASS(self);
-    if (!klass->setupCipher(self, keyIDBuffer)) {
+    if (!klass->setupCipher(self, keyIDBuffer.get())) {
         GST_ELEMENT_ERROR (self, STREAM, FAILED, ("Failed to configure cipher"), (NULL));
         gst_buffer_remove_meta(buffer, reinterpret_cast<GstMeta*>(protectionMeta));
         return GST_FLOW_NOT_SUPPORTED;
@@ -366,7 +365,7 @@ static GstFlowReturn webkitMediaCommonEncryptionDecryptTransformInPlace(GstBaseT
 
     GstBuffer* ivBuffer = gst_value_get_buffer(value);
     GST_TRACE_OBJECT(self, "decrypting");
-    if (!klass->decrypt(self, keyIDBuffer, ivBuffer, buffer, subSampleCount, subSamplesBuffer)) {
+    if (!klass->decrypt(self, keyIDBuffer.get(), ivBuffer, buffer, subSampleCount, subSamplesBuffer)) {
         GST_ERROR_OBJECT(self, "Decryption failed");
         klass->releaseCipher(self);
         gst_buffer_remove_meta(buffer, reinterpret_cast<GstMeta*>(protectionMeta));
-- 
2.25.1

