From 4a117f613276facfdbdc767ed6f06f421aa1ae2b Mon Sep 17 00:00:00 2001
From: krishnapriya kanagaraj <krishnapriya_kanagaraj@comcast.com>
Date: Thu, 21 May 2020 16:17:31 +0000
Subject: [PATCH] XRE-15546:[RDM RWI ] WI starts working only after restarting receiver
Source: COMCAST
Upstream-Status: Pending
Reason for change: Retry to load "libWPEWebInspectorResources.so" when getting failed at first time.
Test Procedure: ensure RWI works at first time
Risks: Low

Signed-off-by: Krishna Priya Kanagaraj <Krishnapriya_kanagaraj@comcast.com>
---
 .../InspectorServer/wpe/WebInspectorServerWPE.cpp  | 30 +++++++++++++++-------
 1 file changed, 21 insertions(+), 9 deletions(-)

Index: git/Source/WebKit/UIProcess/InspectorServer/wpe/WebInspectorServerWPE.cpp
===================================================================
--- git.orig/Source/WebKit/UIProcess/InspectorServer/wpe/WebInspectorServerWPE.cpp
+++ git/Source/WebKit/UIProcess/InspectorServer/wpe/WebInspectorServerWPE.cpp
@@ -42,16 +42,32 @@ namespace WebKit {
 
 static void loadResourcesIfNeeded()
 {
-    static std::once_flag flag;
-    std::call_once(flag, [] {
-        GModule* resourcesModule = g_module_open("libWPEWebInspectorResources.so", G_MODULE_BIND_LAZY);
-        if (!resourcesModule) {
-            WTFLogAlways("Error loading libWPEWebInspectorResources.so: %s", g_module_error());
-            return;
-	}
-
+    static bool didLoad = false;
+    if(didLoad)
+        return;
+    auto tryLoadResources = [](const gchar* path) -> gboolean {
+        GModule* resourcesModule = g_module_open(path, G_MODULE_BIND_LAZY);
+        if (!resourcesModule)
+            return false;
         g_module_make_resident(resourcesModule);
-    });
+        return true;
+    };
+    // try env
+    const gchar* envPath = g_getenv("WEBKIT_INSPECTOR_RESOURCES_PATH");
+    GUniquePtr<gchar*> searchPaths ( envPath ? g_strsplit(envPath, ":", -1) : nullptr );
+    for (gchar** path = searchPaths.get(); !didLoad && path && *path; ++path) {
+        GUniquePtr<gchar> modulePath (g_module_build_path(*path, "libWPEWebInspectorResources.so"));
+        didLoad = tryLoadResources(modulePath.get());
+    }
+    // try pkg lib dir
+    if (!didLoad)
+       didLoad = tryLoadResources(PKGLIBDIR G_DIR_SEPARATOR_S "libWPEWebInspectorResources.so");
+    // try system
+    if (!didLoad)
+        didLoad = tryLoadResources("libWPEWebInspectorResources.so");
+    // log last error
+    if (!didLoad)
+        WTFLogAlways("Error loading libWPEWebInspectorResources.so: %s", g_module_error());
 }
 
 bool WebInspectorServer::platformResourceForPath(const String& path, Vector<char>& data, String& contentType)
