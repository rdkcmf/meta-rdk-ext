From b8de74c38296741df9758a41246069ab4284eb69 Mon Sep 17 00:00:00 2001
From: Ievgen Mutavchi <Ievgen_Mutavchi@comcast.com>
Date: Sun, 26 Apr 2020 12:33:51 -0400
Subject: [PATCH 87/93] skip compositor scene rendering of hidden web page
Source: COMCAST
License: GPLV2
Upstream-Status: None
Signed-off-by: Eugene Mutavchi <Ievgen_Mutavchi@comcast.com>

---
 .../threadedcompositor/ThreadedCompositor.cpp        | 12 +++++++++++-
 .../threadedcompositor/ThreadedCompositor.h          |  3 +++
 .../WebProcess/WebPage/AcceleratedDrawingArea.cpp    |  4 ++++
 .../ThreadedCoordinatedLayerTreeHost.cpp             |  7 +++++++
 .../ThreadedCoordinatedLayerTreeHost.h               |  2 ++
 Source/WebKit/WebProcess/WebPage/LayerTreeHost.cpp   |  6 ++++++
 Source/WebKit/WebProcess/WebPage/LayerTreeHost.h     |  1 +
 7 files changed, 34 insertions(+), 1 deletions(-)

Index: git/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
===================================================================
--- git.orig/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
+++ git/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
@@ -172,6 +172,13 @@ void ThreadedCompositor::setDrawsBackgro
     m_compositingRunLoop->scheduleUpdate();
 }
 
+void ThreadedCompositor::setIsVisible(bool v)
+{
+    LockHolder locker(m_attributes.lock);
+    m_attributes.isVisbile = v;
+    m_compositingRunLoop->scheduleUpdate();
+}
+
 void ThreadedCompositor::updateViewport()
 {
     m_compositingRunLoop->scheduleUpdate();
@@ -241,6 +248,7 @@ void ThreadedCompositor::renderLayerTree
     float scaleFactor;
     bool drawsBackground;
     bool needsResize;
+    bool isVisbile;
     Vector<WebCore::CoordinatedGraphicsState> states;
 
     {
@@ -250,6 +258,7 @@ void ThreadedCompositor::renderLayerTree
         scaleFactor = m_attributes.scaleFactor;
         drawsBackground = m_attributes.drawsBackground;
         needsResize = m_attributes.needsResize;
+        isVisbile = m_attributes.isVisbile;
 
         states = WTFMove(m_attributes.states);
 
@@ -280,12 +289,13 @@ void ThreadedCompositor::renderLayerTree
     viewportTransform.scale(scaleFactor);
     viewportTransform.translate(-scrollPosition.x(), -scrollPosition.y());
 
-    if (!drawsBackground) {
+    if (!drawsBackground || !isVisbile) {
         glClearColor(0, 0, 0, 0);
         glClear(GL_COLOR_BUFFER_BIT);
     }
 
     m_scene->applyStateChanges(states);
+    if (isVisbile)
     m_scene->paintToCurrentGLContext(viewportTransform, 1, FloatRect { FloatPoint { }, viewportSize },
         Color::transparent, !drawsBackground, m_paintFlags);
 
Index: git/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.h
===================================================================
--- git.orig/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.h
+++ git/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.h
@@ -85,6 +85,8 @@ public:
 
     void frameComplete();
 
+    void setIsVisible(bool v);
+
 private:
     ThreadedCompositor(Client&, ThreadedDisplayRefreshMonitor::Client&, WebCore::PlatformDisplayID, WebPage&, const WebCore::IntSize&, float scaleFactor, ShouldDoFrameSync, WebCore::TextureMapper::PaintFlags);
 
@@ -123,6 +125,7 @@ private:
 
         bool clientRendersNextFrame { false };
         bool coordinateUpdateCompletionWithClient { false };
+        bool isVisbile { true };
     } m_attributes;
 
 #if USE(REQUEST_ANIMATION_FRAME_DISPLAY_MONITOR)
Index: git/Source/WebKit/WebProcess/WebPage/AcceleratedDrawingArea.cpp
===================================================================
--- git.orig/Source/WebKit/WebProcess/WebPage/AcceleratedDrawingArea.cpp
+++ git/Source/WebKit/WebProcess/WebPage/AcceleratedDrawingArea.cpp
@@ -502,6 +502,10 @@ void AcceleratedDrawingArea::activitySta
 {
     if (changed & ActivityState::IsInWindow)
         handleIsInWindowChanged();
+
+    if (changed & ActivityState::IsVisible && m_layerTreeHost) {
+        m_layerTreeHost->pageVisibilityChanged(m_webPage.isVisible());
+    }
 }
 
 void AcceleratedDrawingArea::attachViewOverlayGraphicsLayer(Frame* frame, GraphicsLayer* viewOverlayRootLayer)
Index: git/Source/WebKit/WebProcess/WebPage/CoordinatedGraphics/ThreadedCoordinatedLayerTreeHost.cpp
===================================================================
--- git.orig/Source/WebKit/WebProcess/WebPage/CoordinatedGraphics/ThreadedCoordinatedLayerTreeHost.cpp
+++ git/Source/WebKit/WebProcess/WebPage/CoordinatedGraphics/ThreadedCoordinatedLayerTreeHost.cpp
@@ -321,6 +321,13 @@ RefPtr<WebCore::DisplayRefreshMonitor> T
 }
 #endif
 
+void ThreadedCoordinatedLayerTreeHost::pageVisibilityChanged(bool v)
+{
+    CoordinatedLayerTreeHost::pageVisibilityChanged(v);
+    if (m_compositor)
+        m_compositor->setIsVisible(v);
+}
+
 } // namespace WebKit
 
 #endif // USE(COORDINATED_GRAPHICS)
Index: git/Source/WebKit/WebProcess/WebPage/CoordinatedGraphics/ThreadedCoordinatedLayerTreeHost.h
===================================================================
--- git.orig/Source/WebKit/WebProcess/WebPage/CoordinatedGraphics/ThreadedCoordinatedLayerTreeHost.h
+++ git/Source/WebKit/WebProcess/WebPage/CoordinatedGraphics/ThreadedCoordinatedLayerTreeHost.h
@@ -71,6 +71,8 @@ private:
 
     void setIsDiscardable(bool) override;
 
+    void pageVisibilityChanged(bool) override;
+
 #if PLATFORM(GTK) && PLATFORM(X11) &&  !USE(REDIRECTED_XCOMPOSITE_WINDOW)
     void setNativeSurfaceHandleForCompositing(uint64_t) override;
 #endif
Index: git/Source/WebKit/WebProcess/WebPage/LayerTreeHost.cpp
===================================================================
--- git.orig/Source/WebKit/WebProcess/WebPage/LayerTreeHost.cpp
+++ git/Source/WebKit/WebProcess/WebPage/LayerTreeHost.cpp
@@ -83,6 +83,12 @@ void LayerTreeHost::resumeRendering()
     scheduleLayerFlush();
 }
 
+void LayerTreeHost::pageVisibilityChanged(bool isVisible)
+{
+    if (isVisible)
+        scheduleLayerFlush();
+}
+
 void LayerTreeHost::invalidate()
 {
     ASSERT(m_isValid);
Index: git/Source/WebKit/WebProcess/WebPage/LayerTreeHost.h
===================================================================
--- git.orig/Source/WebKit/WebProcess/WebPage/LayerTreeHost.h
+++ git/Source/WebKit/WebProcess/WebPage/LayerTreeHost.h
@@ -80,6 +80,7 @@ public:
 
     virtual void pauseRendering();
     virtual void resumeRendering();
+    virtual void pageVisibilityChanged(bool);
 
     virtual WebCore::GraphicsLayerFactory* graphicsLayerFactory() { return nullptr; }
 
