From c7e8deb9d566e31ec6542e2a362ab1eaf65e443f Mon Sep 17 00:00:00 2001
From: Ievgen Mutavchi <Ievgen_Mutavchi@comcast.com>
Date: Thu, 1 Apr 2021 11:57:38 -0400
Subject: [PATCH] [MSE] avoid unneeded flushing of video source buffer

---
 Source/WebCore/Modules/mediasource/SourceBuffer.cpp | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

Index: git/Source/WebCore/Modules/mediasource/SourceBuffer.cpp
===================================================================
--- git.orig/Source/WebCore/Modules/mediasource/SourceBuffer.cpp
+++ git/Source/WebCore/Modules/mediasource/SourceBuffer.cpp
@@ -2214,7 +2214,6 @@ void SourceBuffer::trySignalAllSamplesEn
 
 void SourceBuffer::reenqueueMediaForTime(TrackBuffer& trackBuffer, const AtomicString& trackID, const MediaTime& time)
 {
-    m_private->flush(trackID);
     trackBuffer.decodeQueue.clear();
 
     // Find the sample which contains the current presentation time.
@@ -2257,6 +2256,8 @@ void SourceBuffer::reenqueueMediaForTime
         trackBuffer.lastEnqueuedDecodeDuration = MediaTime::invalidTime();
     }
 
+    m_private->flush(trackID);
+
     // Fill the decode queue with the remaining samples.
     for (auto iter = currentSampleDTSIterator; iter != trackBuffer.samples.decodeOrder().end(); ++iter)
         trackBuffer.decodeQueue.insert(*iter);
Index: git/Source/WebCore/platform/graphics/gstreamer/mse/PlaybackPipeline.cpp
===================================================================
--- git.orig/Source/WebCore/platform/graphics/gstreamer/mse/PlaybackPipeline.cpp
+++ git/Source/WebCore/platform/graphics/gstreamer/mse/PlaybackPipeline.cpp
@@ -485,9 +485,9 @@ bool PlaybackPipeline::hasFutureData(con
     GST_OBJECT_LOCK(m_webKitMediaSrc.get());
     WebKitMediaSrcPrivate* priv = m_webKitMediaSrc->priv;
     for (Stream* stream : priv->streams) {
-        if (lastEnqueuedTime > stream->lastEnqueuedTime)
+        if (stream->lastEnqueuedTime.isValid() && lastEnqueuedTime > stream->lastEnqueuedTime)
             lastEnqueuedTime = stream->lastEnqueuedTime;
-        if (firstEnqueuedTime < stream->firstEnqueuedTime)
+        if (stream->firstEnqueuedTime.isValid() && firstEnqueuedTime < stream->firstEnqueuedTime)
             firstEnqueuedTime = stream->firstEnqueuedTime;
     }
     GST_OBJECT_UNLOCK(m_webKitMediaSrc.get());
Index: git/Source/WebCore/platform/graphics/gstreamer/mse/WebKitMediaSourceGStreamer.cpp
===================================================================
--- git.orig/Source/WebCore/platform/graphics/gstreamer/mse/WebKitMediaSourceGStreamer.cpp
+++ git/Source/WebCore/platform/graphics/gstreamer/mse/WebKitMediaSourceGStreamer.cpp
@@ -888,8 +888,7 @@ void webKitMediaSrcPrepareSeek(WebKitMed
 
     for (Stream* stream : source->priv->streams) {
         stream->appsrcNeedDataFlag = false;
-        // Don't allow samples away from the seekTime to be enqueued.
-        stream->lastEnqueuedTime = time;
+        stream->lastEnqueuedTime = MediaTime::invalidTime();
     }
 
     // The pending action will be performed in enabledAppsrcSeekData().
