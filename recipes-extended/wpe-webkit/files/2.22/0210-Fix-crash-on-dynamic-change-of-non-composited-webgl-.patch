From d0752a501df0bc8c0c707788f6a4841971c1e81a Mon Sep 17 00:00:00 2001
From: Eugene Mutavchi <Ievgen_Mutavchi@comcast.com>
Date: Fri, 18 Sep 2020 02:35:47 +0000
Source: COMCAST
License: LGPL-2.1-or-later
Upstream-Status: None
Subject: [PATCH] Fix crash on dynamic change of non composited webgl mode
Signed-off-by: Eugene Mutavchi <Ievgen_Mutavchi@comcast.com>

---
 .../graphics/texmap/GraphicsContext3DTextureMapper.cpp      | 6 ++++++
 .../texmap/coordinated/CoordinatedGraphicsLayer.cpp         | 3 ++-
 .../threadedcompositor/ThreadedCompositor.cpp               | 6 ++++--
 Source/WebKit/WebProcess/WebPage/AcceleratedDrawingArea.cpp | 5 +++++
 4 files changed, 17 insertions(+), 3 deletions(-)

Index: git/Source/WebCore/platform/graphics/texmap/GraphicsContext3DTextureMapper.cpp
===================================================================
--- git.orig/Source/WebCore/platform/graphics/texmap/GraphicsContext3DTextureMapper.cpp
+++ git/Source/WebCore/platform/graphics/texmap/GraphicsContext3DTextureMapper.cpp
@@ -66,6 +66,12 @@ static Deque<GraphicsContext3D*, MaxActi
     return s_activeContexts;
 }
 
+void looseGLContext() {
+    for (auto ctx : activeContexts()) {
+        ctx->recycleContext();
+    }
+}
+
 RefPtr<GraphicsContext3D> GraphicsContext3D::create(GraphicsContext3DAttributes attributes, HostWindow* hostWindow, GraphicsContext3D::RenderStyle renderStyle)
 {
     static bool initialized = false;
Index: git/Source/WebCore/platform/graphics/texmap/coordinated/CoordinatedGraphicsLayer.cpp
===================================================================
--- git.orig/Source/WebCore/platform/graphics/texmap/coordinated/CoordinatedGraphicsLayer.cpp
+++ git/Source/WebCore/platform/graphics/texmap/coordinated/CoordinatedGraphicsLayer.cpp
@@ -1169,7 +1169,8 @@ void CoordinatedGraphicsLayer::setCoordi
     // We need to update here the layer changeMask so the scene gets all the current values.
     m_layerState.changeMask = UINT_MAX;
 
-    coordinator->attachLayer(this);
+    if (coordinator)
+        coordinator->attachLayer(this);
     for (auto& child : children())
         downcast<CoordinatedGraphicsLayer>(*child).setCoordinatorIncludingSubLayersIfNeeded(coordinator);
 }
Index: git/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
===================================================================
--- git.orig/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
+++ git/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
@@ -114,8 +114,10 @@ void ThreadedCompositor::invalidate()
     m_displayRefreshMonitor->invalidate();
 #endif
     m_compositingRunLoop->performTaskSync([this, protectedThis = makeRef(*this)] {
-        if (!m_context || !m_context->makeContextCurrent())
+        if (!m_context || !m_context->makeContextCurrent()) {
+            m_client.didDestroyGLContext();
             return;
+        }
         m_scene->purgeGLResources();
         m_context = nullptr;
         m_client.didDestroyGLContext();
Index: git/Source/WebKit/WebProcess/WebPage/AcceleratedDrawingArea.cpp
===================================================================
--- git.orig/Source/WebKit/WebProcess/WebPage/AcceleratedDrawingArea.cpp
+++ git/Source/WebKit/WebProcess/WebPage/AcceleratedDrawingArea.cpp
@@ -42,6 +42,10 @@
 #include <wtf/glib/RunLoopSourcePriority.h>
 #endif
 
+namespace WebCore {
+void looseGLContext();
+}
+
 namespace WebKit {
 using namespace WebCore;
 
@@ -164,6 +168,7 @@ void AcceleratedDrawingArea::updatePrefe
     bool nonCompositedWebGLEnabled = store.getBoolValueForKey(WebPreferencesKey::nonCompositedWebGLEnabledKey());
     if (nonCompositedWebGLEnabled != m_nonCompositedWebGLEnabled) {
         if (m_layerTreeHost) {
+            looseGLContext();
             exitAcceleratedCompositingModeNow();
             discardPreviousLayerTreeHost();
         }
