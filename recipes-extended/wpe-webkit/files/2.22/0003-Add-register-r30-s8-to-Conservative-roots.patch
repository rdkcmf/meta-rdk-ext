From f0948e9c6348a2ed08a4fa53766c3ddd9dff7e4f Mon Sep 17 00:00:00 2001
From: Eugene Mutavchi <Ievgen_Mutavchi@comcast.com>
Date: Mon, 9 Aug 2021 20:44:33 +0000
Subject: [PATCH 3/5] Add register r30 (s8) to Conservative roots

---
 Source/JavaScriptCore/heap/RegisterState.h    | 4 +++-
 Source/JavaScriptCore/runtime/JSCellInlines.h | 1 +
 Source/JavaScriptCore/runtime/Structure.cpp   | 1 +
 3 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/Source/JavaScriptCore/heap/RegisterState.h b/Source/JavaScriptCore/heap/RegisterState.h
index 41de1f689f80..3b133591b6bd 100644
--- a/Source/JavaScriptCore/heap/RegisterState.h
+++ b/Source/JavaScriptCore/heap/RegisterState.h
@@ -139,6 +139,7 @@ struct RegisterState {
     uint32_t r21;
     uint32_t r22;
     uint32_t r23;
+    uint32_t r30;
 };
 
 #define SAVE_REG(regname, where) \
@@ -153,7 +154,8 @@ struct RegisterState {
     SAVE_REG(20, registers.r20); \
     SAVE_REG(21, registers.r21); \
     SAVE_REG(22, registers.r22); \
-    SAVE_REG(23, registers.r23)
+    SAVE_REG(23, registers.r23); \
+    SAVE_REG(30, registers.r30)
 
 #endif
 #endif // !OS(WINDOWS)
diff --git a/Source/JavaScriptCore/runtime/JSCellInlines.h b/Source/JavaScriptCore/runtime/JSCellInlines.h
index 66edb0fee000..aad69d28d427 100644
--- a/Source/JavaScriptCore/runtime/JSCellInlines.h
+++ b/Source/JavaScriptCore/runtime/JSCellInlines.h
@@ -267,6 +267,7 @@ inline bool JSCell::isAPIValueWrapper() const
 
 ALWAYS_INLINE void JSCell::setStructure(VM& vm, Structure* structure)
 {
+    RELEASE_ASSERT(structure->isZapped() == false);
     ASSERT(structure->classInfo() == this->structure(vm)->classInfo());
     ASSERT(!this->structure(vm)
         || this->structure(vm)->transitionWatchpointSetHasBeenInvalidated()
diff --git a/Source/JavaScriptCore/runtime/Structure.cpp b/Source/JavaScriptCore/runtime/Structure.cpp
index 4216ef71cf1c..3a2c8a406ac8 100644
--- a/Source/JavaScriptCore/runtime/Structure.cpp
+++ b/Source/JavaScriptCore/runtime/Structure.cpp
@@ -393,6 +393,7 @@ PropertyTable* Structure::materializePropertyTable(VM& vm, bool setPropertyTable
             for (Structure* structure : structures)
                 dataLog(comma, RawPointer(structure));
             dataLog("\n");
+            dataLog("IsLive", this->isLive() ,", IsZappped = ", this->isZapped(), "\n");
         });
     
     return table;
-- 
2.25.1

