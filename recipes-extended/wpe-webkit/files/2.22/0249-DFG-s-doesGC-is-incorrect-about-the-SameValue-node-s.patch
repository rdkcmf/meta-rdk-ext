From 99b91754d53bf7470767b0302d0d395c9af5e12b Mon Sep 17 00:00:00 2001
From: "mark.lam@apple.com"
 <mark.lam@apple.com@268f45cc-cd09-0410-ab3c-d52691b4dbfc>
Date: Mon, 4 Feb 2019 08:15:46 +0000
Subject: [PATCH 10/15] DFG's doesGC() is incorrect about the SameValue node's
 behavior. https://bugs.webkit.org/show_bug.cgi?id=194211
 <rdar://problem/47608913>

Reviewed by Saam Barati.

Only the DoubleRepUse case is guaranteed to not GC.  The other case may GC because
it calls operationSameValue() which may allocate memory for resolving ropes.

* dfg/DFGDoesGC.cpp:
(JSC::DFG::doesGC):

git-svn-id: http://svn.webkit.org/repository/webkit/trunk@240917 268f45cc-cd09-0410-ab3c-d52691b4dbfc
---
 Source/JavaScriptCore/ChangeLog         | 14 ++++++++++++++
 Source/JavaScriptCore/dfg/DFGDoesGC.cpp |  6 +++++-
 2 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/Source/JavaScriptCore/ChangeLog b/Source/JavaScriptCore/ChangeLog
index a8587e246eea..1bb56d411e82 100644
--- a/Source/JavaScriptCore/ChangeLog
+++ b/Source/JavaScriptCore/ChangeLog
@@ -1,3 +1,17 @@
+2019-02-04  Mark Lam  <mark.lam@apple.com>
+
+        DFG's doesGC() is incorrect about the SameValue node's behavior.
+        https://bugs.webkit.org/show_bug.cgi?id=194211
+        <rdar://problem/47608913>
+
+        Reviewed by Saam Barati.
+
+        Only the DoubleRepUse case is guaranteed to not GC.  The other case may GC because
+        it calls operationSameValue() which may allocate memory for resolving ropes.
+
+        * dfg/DFGDoesGC.cpp:
+        (JSC::DFG::doesGC):
+
 2019-02-05  Mark Lam  <mark.lam@apple.com>
 
         Fix DFG's doesGC() for a few more nodes.
diff --git a/Source/JavaScriptCore/dfg/DFGDoesGC.cpp b/Source/JavaScriptCore/dfg/DFGDoesGC.cpp
index b9c2198d9ffc..f03718c98e9a 100644
--- a/Source/JavaScriptCore/dfg/DFGDoesGC.cpp
+++ b/Source/JavaScriptCore/dfg/DFGDoesGC.cpp
@@ -144,7 +144,6 @@ bool doesGC(Graph& graph, Node* node)
     case CompareBelow:
     case CompareBelowEq:
     case CompareEqPtr:
-    case SameValue:
     case Call:
     case DirectCall:
     case TailCallInlinedCaller:
@@ -430,6 +429,11 @@ bool doesGC(Graph& graph, Node* node)
             return false;
         return true;
 
+    case SameValue:
+        if (node->isBinaryUseKind(DoubleRepUse))
+            return false;
+        return true;
+
     case LastNodeType:
         RELEASE_ASSERT_NOT_REACHED();
         return true;
-- 
2.24.0

