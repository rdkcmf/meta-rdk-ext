From 76aecd4485b83c1d3336acdd809939ace043e88b Mon Sep 17 00:00:00 2001
From: nrajan002c <nambi_rajang@cable.comcast.com>
Date: Thu, 6 May 2021 03:39:55 +0000
Subject: [PATCH] Setting-SW-Decoder-property-to-westerossink

Signed-off-by: nrajan002c <nambi_rajang@cable.comcast.com>
---
 .../gstreamer/MediaPlayerPrivateGStreamer.cpp      | 30 ++++++++++++++++++++++
 1 file changed, 30 insertions(+)

diff --git a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
index 6e6aae7ebc3f..de5d403b0c48 100644
--- a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
@@ -2773,6 +2773,16 @@ AudioSourceProvider* MediaPlayerPrivateGStreamer::audioSourceProvider()
 }
 #endif
 
+unsigned getEssMgrFlag(const char* nick)
+{
+    static GFlagsClass* flagsClass = static_cast<GFlagsClass*>(g_type_class_ref(g_type_from_name("EssRMgrVideoUsage")));
+    ASSERT(flagsClass);
+    GFlagsValue* flag = g_flags_get_value_by_nick(flagsClass, nick);
+    if (!flag)
+        return 0;
+    return flag->value;
+}
+
 void MediaPlayerPrivateGStreamer::createGSTPlayBin(const gchar* playbinName, const String& pipelineName)
 {
     if (m_pipeline) {
@@ -2888,6 +2898,26 @@ void MediaPlayerPrivateGStreamer::createGSTPlayBin(const gchar* playbinName, con
     // configure westeros sink before it allocates resources
     if (m_videoSink)
         elementSetupCallback(this, m_videoSink.get(), m_pipeline.get());
+
+#if ENABLE(MEDIA_STREAM)
+
+    AtomicString val;
+    bool isPIPContent = false;
+
+    if (m_videoSink)
+    {
+        if (m_player->doesHaveAttribute("pip", &val))
+            isPIPContent = equalLettersIgnoringASCIICase(val.string(), "true");
+
+        if(isPIPContent){
+            unsigned flagFullResolution = getEssMgrFlag("fullResolution");
+            unsigned flagFullQuality = getEssMgrFlag("fullQuality");
+            GST_WARNING("Setting res-usage property to use SW decoder for webrtc stream (%d) (%d)",flagFullResolution, flagFullQuality);
+            g_object_set(G_OBJECT(m_videoSink.get()), "res-usage", flagFullResolution | flagFullQuality, nullptr);
+        }
+    }
+#endif
+
 #endif
 
 #if USE(WESTEROS_SINK)
-- 
2.14.2

