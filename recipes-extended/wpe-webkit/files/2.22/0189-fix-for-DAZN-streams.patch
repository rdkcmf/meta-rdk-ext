From 846a0220e671aad94ca7d24433e63db9a5dad145 Mon Sep 17 00:00:00 2001
From: Gurdal Oruklu <gurdal_oruklu@comcast.com>
License: GPLV2
Date: Tue, 9 Jun 2020 20:16:25 +0000
Subject: [PATCH] fix for DAZN streams use initdata from playready stream
Source: COMCAST
Upstream-Status: None
Signed-off-by: Gurdal Oruklu <gurdal_oruklu@comcast.com>
---
 Source/WebCore/html/HTMLMediaElement.cpp                       |  5 +++++
 Source/WebCore/platform/graphics/MediaPlayer.cpp               |  9 +++++++++
 Source/WebCore/platform/graphics/MediaPlayer.h                 |  2 ++
 .../gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp | 10 +++++++++-
 4 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/Source/WebCore/html/HTMLMediaElement.cpp b/Source/WebCore/html/HTMLMediaElement.cpp
index 9f008f7..5047bb8c 100644
--- a/Source/WebCore/html/HTMLMediaElement.cpp
+++ b/Source/WebCore/html/HTMLMediaElement.cpp
@@ -524,6 +524,11 @@ HTMLMediaElement::HTMLMediaElement(const QualifiedName& tagName, Document& docum
             MediaPlayer::setYouTubeQuirksEnabled(true);
         else
             MediaPlayer::setYouTubeQuirksEnabled(false);
+
+        if (equalLettersIgnoringASCIICase(host, "www.dazn.com"))
+            MediaPlayer::setDAZNQuirksEnabled(true);
+        else
+            MediaPlayer::setDAZNQuirksEnabled(false);
     }
     allMediaElements().add(this);
 
diff --git a/Source/WebCore/platform/graphics/MediaPlayer.cpp b/Source/WebCore/platform/graphics/MediaPlayer.cpp
index c34e031..ab6c01b 100644
--- a/Source/WebCore/platform/graphics/MediaPlayer.cpp
+++ b/Source/WebCore/platform/graphics/MediaPlayer.cpp
@@ -1634,6 +1634,7 @@ namespace WebCore {
 namespace
 {
 bool gYouTubeQuirksEnabled = false;
+bool gDAZNQuirksEnabled = false;
 }
 
 void MediaPlayer::setYouTubeQuirksEnabled(bool enabled)
@@ -1646,7 +1647,15 @@ bool MediaPlayer::isYouTubeQuirksEnabled()
     static bool enableYTQuirks = !!getenv("WPE_ENABLE_YT_MSE_HACKS");
     return gYouTubeQuirksEnabled || enableYTQuirks;
 }
+void MediaPlayer::setDAZNQuirksEnabled(bool enabled)
+{
+    gDAZNQuirksEnabled = enabled;
+}
 
+bool MediaPlayer::isDAZNQuirksEnabled()
+{
+    return gDAZNQuirksEnabled;
+}
 }
 
 #endif
diff --git a/Source/WebCore/platform/graphics/MediaPlayer.h b/Source/WebCore/platform/graphics/MediaPlayer.h
index e1ce310..8a7d760 100644
--- a/Source/WebCore/platform/graphics/MediaPlayer.h
+++ b/Source/WebCore/platform/graphics/MediaPlayer.h
@@ -264,6 +264,8 @@ public:
     static bool supportsKeySystem(const String& keySystem, const String& mimeType);
     static void setYouTubeQuirksEnabled(bool);
     static bool isYouTubeQuirksEnabled();
+    static void setDAZNQuirksEnabled(bool);
+    static bool isDAZNQuirksEnabled();
 
     bool supportsPictureInPicture() const;
     bool supportsFullscreen() const;
diff --git a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp
index 04e9836..82481d4 100644
--- a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp
@@ -33,8 +33,10 @@
 #include <wtf/RunLoop.h>
 #include <wtf/text/Base64.h>
 #include <wtf/text/StringHash.h>
+#include "MediaPlayer.h"
 
 using WebCore::CDMInstance;
+using WebCore::MediaPlayer;
 using WebCore::GstMappedBuffer;
 
 #define WEBKIT_MEDIA_CENC_DECRYPT_GET_PRIVATE(obj) (G_TYPE_INSTANCE_GET_PRIVATE((obj), WEBKIT_TYPE_MEDIA_CENC_DECRYPT, WebKitMediaCommonEncryptionDecryptPrivate))
@@ -432,9 +434,15 @@ static void webkitMediaCommonEncryptionDecryptProcessProtectionEvents(WebKitMedi
 
         if (isCDMInstanceAvailable && g_strcmp0(WebCore::GStreamerEMEUtilities::keySystemToUuid(eventKeySystem), WebCore::GStreamerEMEUtilities::keySystemToUuid(priv->m_cdmInstance->keySystem()))) {
             GST_TRACE_OBJECT(self, "protection event for a different key system");
-            continue;
+
+            if (MediaPlayer::isDAZNQuirksEnabled()) {
+                 GST_TRACE_OBJECT(self, "DAZN quirk enabled, processing initdata from different key system");
+            } else {
+                continue;
+            }
         }
 
+
         if (priv->m_currentEvent == GST_EVENT_SEQNUM(event.get())) {
             GST_TRACE_OBJECT(self, "event %u already handled", priv->m_currentEvent);
             continue;
-- 
1.9.1

