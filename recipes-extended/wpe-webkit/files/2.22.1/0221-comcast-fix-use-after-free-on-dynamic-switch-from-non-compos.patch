From 063b42201cc9666abb18a9548aff63210f827368 Mon Sep 17 00:00:00 2001
From: Eugene Mutavchi <Ievgen_Mutavchi@comcast.com>
Date: Fri, 29 Jan 2021 02:22:20 +0000
Subject: [PATCH] Fix use-after-free on dynamic switch from non-composited to
 normal mode

---
 .../graphics/texmap/TextureMapperPlatformLayerProxy.cpp   | 7 ++++++-
 .../graphics/texmap/TextureMapperPlatformLayerProxy.h     | 2 +-
 .../CoordinatedGraphics/CoordinatedGraphicsScene.cpp      | 8 +++++++-
 .../threadedcompositor/ThreadedCompositor.cpp             | 4 ++++
 4 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.cpp b/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.cpp
index e18db3589d87..10909abc6da2 100644
--- a/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.cpp
+++ b/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.cpp
@@ -79,9 +79,14 @@ void TextureMapperPlatformLayerProxy::activateOnCompositingThread(Compositor* co
 #endif
 }
 
-void TextureMapperPlatformLayerProxy::invalidate()
+void TextureMapperPlatformLayerProxy::invalidate(bool layerOnly)
 {
     ASSERT(m_compositorThread == &Thread::current());
+    if (layerOnly) {
+        LockHolder locker(m_lock);
+        m_targetLayer = nullptr;
+        return;
+    }
     Function<void()> updateFunction;
     {
         LockHolder locker(m_lock);
diff --git a/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.h b/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.h
index 114415af36f5..0507f4241e46 100644
--- a/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.h
+++ b/Source/WebCore/platform/graphics/texmap/TextureMapperPlatformLayerProxy.h
@@ -66,7 +66,7 @@ public:
     bool isActive();
 
     WEBCORE_EXPORT void activateOnCompositingThread(Compositor*, TextureMapperLayer*);
-    WEBCORE_EXPORT void invalidate();
+    WEBCORE_EXPORT void invalidate(bool layerOnly = false);
 
     WEBCORE_EXPORT void swapBuffer();
     void dropCurrentBufferWhilePreservingTexture();
diff --git a/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.cpp b/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.cpp
index 5d893af2b880..234dca5a45b0 100644
--- a/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.cpp
+++ b/Source/WebKit/Shared/CoordinatedGraphics/CoordinatedGraphicsScene.cpp
@@ -262,8 +262,10 @@ void CoordinatedGraphicsScene::deleteLayer(CoordinatedLayerID layerID)
 
     m_backingStores.remove(layer.get());
 #if USE(COORDINATED_GRAPHICS_THREADED)
-    if (auto platformLayerProxy = m_platformLayerProxies.take(layer.get()))
+    if (auto platformLayerProxy = m_platformLayerProxies.take(layer.get())) {
+        platformLayerProxy->invalidate(true);
         m_platformLayerProxiesToDelete.append(platformLayerProxy);
+    }
 #endif
 }
 
@@ -527,6 +529,10 @@ void CoordinatedGraphicsScene::applyStateChangesAndNotifyVideoPosition(const Vec
 
         for (auto& layer : state.layersToUpdate)
             setLayerState(layer.first, layer.second, commitScope);
+
+        for (size_t i = 0; i < m_platformLayerProxiesToDelete.size(); i++)
+            m_platformLayerProxiesToDelete.at(i)->invalidate();
+        m_platformLayerProxiesToDelete.clear();
     }
 
     TextureMapperLayer* currentRootLayer = rootLayer();
diff --git a/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp b/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
index efded9f2bba8..4b39bba48852 100644
--- a/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
+++ b/Source/WebKit/Shared/CoordinatedGraphics/threadedcompositor/ThreadedCompositor.cpp
@@ -113,9 +113,13 @@ void ThreadedCompositor::invalidate()
 #if USE(REQUEST_ANIMATION_FRAME_DISPLAY_MONITOR)
     m_displayRefreshMonitor->invalidate();
 #endif
+    if (m_nonCompositedWebGLEnabled) {
+        m_scene->purgeGLResources();
+    }
     m_compositingRunLoop->performTaskSync([this, protectedThis = makeRef(*this)] {
         if (!m_context || !m_context->makeContextCurrent()) {
             m_client.didDestroyGLContext();
+            m_scene = nullptr;
             return;
         }
         m_scene->purgeGLResources();
-- 
2.17.1

