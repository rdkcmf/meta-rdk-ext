From 51e4da430db853d792c0ee89491c68fbf267b9d2 Mon Sep 17 00:00:00 2001
From: Gurdal Oruklu <gurdal_oruklu@comcast.com>
Date: Tue, 20 Oct 2020 05:27:33 +0000
Subject: [PATCH] added width and height to decrypt() calls

Source: COMCAST
License: LGPL-2.1-or-later
Upstream-Status: pending

Signed-off-by: Gurdal Oruklu <gurdal_oruklu@comcast.com>
---
 .../WebKitCommonEncryptionDecryptorGStreamer.cpp   | 28 +++++++++++++++++++++-
 .../eme/WebKitCommonEncryptionDecryptorGStreamer.h |  2 +-
 .../eme/WebKitOpenCDMDecryptorGStreamer.cpp        |  8 +++----
 3 files changed, 32 insertions(+), 6 deletions(-)

diff --git a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp
index f62cc29a729b..1e7a9383bc53 100644
--- a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.cpp
@@ -52,6 +52,8 @@ struct _WebKitMediaCommonEncryptionDecryptPrivate {
     uint32_t m_currentEvent { 0 };
     bool m_isFlushing { false };
     bool m_notifiedDecryptStart { false };
+    uint32_t m_sourceWidth { 0 };
+    uint32_t m_sourceHeight { 0 };
 };
 
 static GstStateChangeReturn webKitMediaCommonEncryptionDecryptorChangeState(GstElement*, GstStateChange transition);
@@ -126,6 +128,7 @@ static GstCaps* webkitMediaCommonEncryptionDecryptTransformCaps(GstBaseTransform
 
     GstCaps* transformedCaps = gst_caps_new_empty();
     WebKitMediaCommonEncryptionDecrypt* self = WEBKIT_MEDIA_CENC_DECRYPT(base);
+    WebKitMediaCommonEncryptionDecryptPrivate* priv = self->priv;
 
     unsigned size = gst_caps_get_size(caps);
     for (unsigned i = 0; i < size; ++i) {
@@ -150,6 +153,29 @@ static GstCaps* webkitMediaCommonEncryptionDecryptTransformCaps(GstBaseTransform
                     || g_str_has_prefix(fieldName, "cipher-mode"))
                     gst_structure_remove_field(outgoingStructure.get(), fieldName);
             }
+            int sourceWidth=0;
+            if (gst_structure_has_field(incomingStructure, "width")){
+                if (gst_structure_get_int(incomingStructure, "width", &sourceWidth)) {
+                    GST_LOG_OBJECT(base, "setting width: %d", sourceWidth);
+                    priv->m_sourceWidth = sourceWidth;
+                }else{
+                    GST_ERROR_OBJECT(base, "could not get width %d", sourceWidth);
+                }
+            }else{
+                GST_WARNING_OBJECT(base, "could not find width!");
+            }
+            int sourceHeight=0;
+            if (gst_structure_has_field(incomingStructure, "height")){
+                if (gst_structure_get_int(incomingStructure, "height", &sourceHeight)) {
+                    GST_LOG_OBJECT(base, "setting height: %d", sourceHeight);
+                    priv->m_sourceHeight= sourceHeight;
+                }else{
+                    GST_ERROR_OBJECT(base, "could not get height %d", sourceHeight);
+                }
+            }else{
+                GST_WARNING_OBJECT(base, "could not find height!");
+            }
+
         } else {
             outgoingStructure = GUniquePtr<GstStructure>(gst_structure_copy(incomingStructure));
             // Filter out the video related fields from the up-stream caps,
@@ -374,7 +400,7 @@ static GstFlowReturn webkitMediaCommonEncryptionDecryptTransformInPlace(GstBaseT
 
     GstBuffer* ivBuffer = gst_value_get_buffer(value);
     GST_TRACE_OBJECT(self, "decrypting");
-    if (!klass->decrypt(self, keyIDBuffer, ivBuffer, buffer, subSampleCount, subSamplesBuffer)) {
+    if (!klass->decrypt(self, keyIDBuffer, ivBuffer, buffer, subSampleCount, subSamplesBuffer, priv->m_sourceWidth, priv->m_sourceHeight)) {
         GST_ELEMENT_ERROR (self, STREAM, DECRYPT, ("Decryption failed"), (NULL));
         klass->releaseCipher(self);
         gst_buffer_remove_meta(buffer, reinterpret_cast<GstMeta*>(protectionMeta));
diff --git a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.h b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.h
index 49e427992661..5403f9dcb5f8 100644
--- a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.h
+++ b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitCommonEncryptionDecryptorGStreamer.h
@@ -60,7 +60,7 @@ struct _WebKitMediaCommonEncryptionDecryptClass {
     GstBaseTransformClass parentClass;
 
     bool (*setupCipher)(WebKitMediaCommonEncryptionDecrypt*, GstBuffer*);
-    bool (*decrypt)(WebKitMediaCommonEncryptionDecrypt*, GstBuffer* keyIDBuffer, GstBuffer* ivBuffer, GstBuffer* buffer, unsigned subSamplesCount, GstBuffer* subSamplesBuffer);
+    bool (*decrypt)(WebKitMediaCommonEncryptionDecrypt*, GstBuffer* keyIDBuffer, GstBuffer* ivBuffer, GstBuffer* buffer, unsigned subSamplesCount, GstBuffer* subSamplesBuffer, uint32_t width, uint32_t height);
     void (*releaseCipher)(WebKitMediaCommonEncryptionDecrypt*);
     void (*receivedProtectionEvent)(WebKitMediaCommonEncryptionDecrypt*, unsigned);
     bool (*handleKeyId)(WebKitMediaCommonEncryptionDecrypt*, const WebCore::SharedBuffer&);
diff --git a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitOpenCDMDecryptorGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitOpenCDMDecryptorGStreamer.cpp
index 2222432319fc..940286c6a4cb 100644
--- a/Source/WebCore/platform/graphics/gstreamer/eme/WebKitOpenCDMDecryptorGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/eme/WebKitOpenCDMDecryptorGStreamer.cpp
@@ -44,7 +44,7 @@ struct _WebKitOpenCDMDecryptPrivate {
 };
 
 static void webKitMediaOpenCDMDecryptorFinalize(GObject*);
-static bool webKitMediaOpenCDMDecryptorDecrypt(WebKitMediaCommonEncryptionDecrypt*, GstBuffer* keyIDBuffer, GstBuffer* iv, GstBuffer* sample, unsigned subSamplesCount, GstBuffer* subSamples);
+static bool webKitMediaOpenCDMDecryptorDecrypt(WebKitMediaCommonEncryptionDecrypt*, GstBuffer* keyIDBuffer, GstBuffer* iv, GstBuffer* sample, unsigned subSamplesCount, GstBuffer* subSamples, uint32_t width, uint32_t height);
 static bool webKitMediaOpenCDMDecryptorHandleKeyId(WebKitMediaCommonEncryptionDecrypt* self, const WebCore::SharedBuffer&);
 static bool webKitMediaOpenCDMDecryptorAttemptToDecryptWithLocalInstance(WebKitMediaCommonEncryptionDecrypt* self, const WebCore::SharedBuffer&);
 
@@ -193,7 +193,7 @@ static bool webKitMediaOpenCDMDecryptorAttemptToDecryptWithLocalInstance(WebKitM
     return webKitMediaOpenCDMDecryptorResetSessionFromKeyIdIfNeeded(self, keyId) != InvalidSession;
 }
 
-static bool webKitMediaOpenCDMDecryptorDecrypt(WebKitMediaCommonEncryptionDecrypt* self, GstBuffer* keyIDBuffer, GstBuffer* ivBuffer, GstBuffer* buffer, unsigned subSampleCount, GstBuffer* subSamplesBuffer)
+static bool webKitMediaOpenCDMDecryptorDecrypt(WebKitMediaCommonEncryptionDecrypt* self, GstBuffer* keyIDBuffer, GstBuffer* ivBuffer, GstBuffer* buffer, unsigned subSampleCount, GstBuffer* subSamplesBuffer, uint32_t width, uint32_t height)
 {
     WebKitOpenCDMDecryptPrivate* priv = GST_WEBKIT_OPENCDM_DECRYPT_GET_PRIVATE(self);
 
@@ -216,8 +216,8 @@ static bool webKitMediaOpenCDMDecryptorDecrypt(WebKitMediaCommonEncryptionDecryp
     }
 
     // Decrypt cipher.
-    GST_TRACE_OBJECT(self, "decrypting");
-    if (int errorCode = opencdm_gstreamer_session_decrypt(priv->m_openCdmSession.get(), buffer, subSamplesBuffer, subSampleCount, ivBuffer, keyIDBuffer, 0)) {
+    GST_TRACE_OBJECT(self, "decrypting, width: %d height:%d", width, height);
+    if (int errorCode = opencdm_gstreamer_session_decrypt(priv->m_openCdmSession.get(), buffer, subSamplesBuffer, subSampleCount, ivBuffer, keyIDBuffer, 0, width, height)) {
         GUniquePtr<gchar> errorMessage (g_strdup_printf("Subsample decryption failed (code=%d)", errorCode));
         gst_element_post_message(
             GST_ELEMENT(self),
-- 
2.14.2

