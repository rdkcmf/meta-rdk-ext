From f4b7979f50fa58c0f382d214a54d5b792435a9e6 Mon Sep 17 00:00:00 2001
From: Eugene Mutavchi <Ievgen_Mutavchi@comcast.com>
Date: Thu, 3 Nov 2022 15:40:30 +0000
Subject: [PATCH] comcast - LLAMA-7963 - disable handling of http protocol by
 webkitcrc

---
 .../graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp   | 6 +++---
 .../graphics/gstreamer/WebKitWebSourceGStreamer.cpp      | 9 +++++++--
 .../graphics/gstreamer/WebKitWebSourceGStreamer.h        | 1 +
 3 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
index 4538c691e257..abf97319ead3 100644
--- a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
@@ -202,7 +202,7 @@ static void busMessageCallback(GstBus*, GstMessage* message, MediaPlayerPrivateG
 
 static void convertToInternalProtocol(URL& url)
 {
-    if (webkitGstCheckVersion(1, 12, 0))
+    if (!webKitSrcShouldUseInternalProtocol())
         return;
     if (url.protocolIsInHTTPFamily() || url.protocolIsBlob())
         url.setProtocol("webkit+" + url.protocol());
@@ -929,7 +929,7 @@ bool MediaPlayerPrivateGStreamer::hasSingleSecurityOrigin() const
 
 Optional<bool> MediaPlayerPrivateGStreamer::wouldTaintOrigin(const SecurityOrigin& origin) const
 {
-    if (webkitGstCheckVersion(1, 12, 0)) {
+    if (!webKitSrcShouldUseInternalProtocol()) {
         GST_TRACE_OBJECT(pipeline(), "Checking %u origins", m_origins.size());
         for (auto& responseOrigin : m_origins) {
             if (!origin.canAccess(*responseOrigin)) {
@@ -2195,7 +2195,7 @@ void MediaPlayerPrivateGStreamer::handleMessage(GstMessage* message)
             if (gst_structure_get(structure, "read-position", G_TYPE_UINT64, &m_networkReadPosition, "size", G_TYPE_UINT64, &m_httpResponseTotalSize, nullptr))
                 GST_DEBUG_OBJECT(pipeline(), "Updated network read position %" G_GUINT64_FORMAT ", size: %" G_GUINT64_FORMAT, m_networkReadPosition, m_httpResponseTotalSize);
         } else if (gst_structure_has_name(structure, "adaptive-streaming-statistics")) {
-            if (WEBKIT_IS_WEB_SRC(m_source.get()) && !webkitGstCheckVersion(1, 12, 0)) {
+            if (WEBKIT_IS_WEB_SRC(m_source.get()) && webKitSrcShouldUseInternalProtocol()) {
                 if (const char* uri = gst_structure_get_string(structure, "uri"))
                     m_hasTaintedOrigin = webKitSrcWouldTaintOrigin(WEBKIT_WEB_SRC_CAST(m_source.get()), SecurityOrigin::create(URL(URL(), uri)));
             }
diff --git a/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.cpp
index 2904a9489d09..fdcb7a125a76 100644
--- a/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.cpp
@@ -866,7 +866,7 @@ static GstURIType webKitWebSrcUriGetType(GType)
 const gchar* const* webKitWebSrcGetProtocols(GType)
 {
     static const char* protocols[4];
-    if (webkitGstCheckVersion(1, 12, 0)) {
+    if (!webKitSrcShouldUseInternalProtocol()) {
         protocols[0] = "http";
         protocols[1] = "https";
         protocols[2] = "blob";
@@ -882,7 +882,7 @@ const gchar* const* webKitWebSrcGetProtocols(GType)
 static URL convertPlaybinURI(const char* uriString)
 {
     URL url(URL(), uriString);
-    if (!webkitGstCheckVersion(1, 12, 0)) {
+    if (webKitSrcShouldUseInternalProtocol()) {
         ASSERT(url.protocol().substring(0, 7) == "webkit+");
         url.setProtocol(url.protocol().substring(7).toString());
     }
@@ -1199,4 +1199,9 @@ bool webKitSrcWouldTaintOrigin(WebKitWebSrc* src, const SecurityOrigin& origin)
     return false;
 }
 
+bool webKitSrcShouldUseInternalProtocol()
+{
+    return true;
+}
+
 #endif // ENABLE(VIDEO) && USE(GSTREAMER)
diff --git a/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.h b/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.h
index b6c52da2cf32..8b3b3c963f02 100644
--- a/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.h
+++ b/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.h
@@ -55,6 +55,7 @@ GType webkit_web_src_get_type(void);
 void webKitWebSrcSetMediaPlayer(WebKitWebSrc*, WebCore::MediaPlayer*);
 bool webKitSrcPassedCORSAccessCheck(WebKitWebSrc*);
 bool webKitSrcWouldTaintOrigin(WebKitWebSrc*, const WebCore::SecurityOrigin&);
+bool webKitSrcShouldUseInternalProtocol();
 
 G_END_DECLS
 
-- 
2.25.1

