Date: Tue, 16 Jan 2018 21:37:52 -0800

From: 257a88310112a1f5e372aed4ddc9d1abcd553e25 Mon Sep 17 00:00:00 2001

Subject: [PATCH] wpe 0.4 configuration fixes for RDK build

        New version of WPE (based on 2017.07.28 Webkit) requires gcc > 5.x
        It's a significant update so most of Comcast patches had to be modified.
        WPE recipe v0.4 will use the new master branch from Metro's repository.

        WPE 0.4 also requires the newer version of OpenCDM from upstream
        Metrological repository.

Source: COMCAST


Upstream-Status: Pending

Signed-off-by: Gurdal Oruklu <Gurdal_Oruklu@comcast.com>
---

 .../audio/gstreamer/AudioFileReaderGStreamer.cpp        | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/Source/WebCore/platform/audio/gstreamer/AudioFileReaderGStreamer.cpp b/Source/WebCore/platform/audio/gstreamer/AudioFileReaderGStreamer.cpp
index c29426234b2..8ff673cf173 100644
--- a/Source/WebCore/platform/audio/gstreamer/AudioFileReaderGStreamer.cpp
+++ b/Source/WebCore/platform/audio/gstreamer/AudioFileReaderGStreamer.cpp
@@ -290,9 +290,13 @@ void AudioFileReader::plugDeinterleave(GstPad* pad)
     g_object_set(capsFilter, "caps", caps.get(), nullptr);
 
     gst_bin_add_many(GST_BIN(m_pipeline.get()), audioConvert, audioResample, capsFilter, m_deInterleave.get(), nullptr);
-
+#if PLATFORM(BROADCOM)
+    UNUSED_PARAM(pad);
+    gst_element_link_pads_full(m_decodebin.get(), "brcm-mp3-src", audioConvert, "sink", GST_PAD_LINK_CHECK_NOTHING);
+#else
     GRefPtr<GstPad> sinkPad = adoptGRef(gst_element_get_static_pad(audioConvert, "sink"));
     gst_pad_link_full(pad, sinkPad.get(), GST_PAD_LINK_CHECK_NOTHING);
+#endif
 
     gst_element_link_pads_full(audioConvert, "src", audioResample, "sink", GST_PAD_LINK_CHECK_NOTHING);
     gst_element_link_pads_full(audioResample, "src", capsFilter, "sink", GST_PAD_LINK_CHECK_NOTHING);
@@ -340,7 +344,17 @@ void AudioFileReader::decodeAudioForBusCreation()
         source = gst_element_factory_make("filesrc", nullptr);
         g_object_set(source, "location", m_filePath, nullptr);
     }
+#if PLATFORM(BROADCOM)
+    GstElement* parse = gst_element_factory_make("mpegaudioparse", NULL);
+    m_decodebin = gst_element_factory_make("brcmmp3decoder", NULL);
+
+    gst_bin_add_many(GST_BIN(m_pipeline.get()), source, parse, WTF::refGPtr(m_decodebin.get()), NULL);
 
+    gst_element_link_pads_full(source, "src", parse, "sink", GST_PAD_LINK_CHECK_NOTHING);
+    gst_element_link_pads_full(parse, "src", m_decodebin.get(), "brcm-mp3-sink", GST_PAD_LINK_CHECK_NOTHING);
+
+    plugDeinterleave(nullptr);
+#else
     m_decodebin = gst_element_factory_make("decodebin", "decodebin");
 #if PLATFORM(BCM_NEXUS)
     g_signal_connect_swapped(m_decodebin.get(), "autoplug-select", G_CALLBACK(decodebinAutoplugSelectCallback), nullptr);
@@ -349,6 +363,7 @@ void AudioFileReader::decodeAudioForBusCreation()
 
     gst_bin_add_many(GST_BIN(m_pipeline.get()), source, m_decodebin.get(), nullptr);
     gst_element_link_pads_full(source, "src", m_decodebin.get(), "sink", GST_PAD_LINK_CHECK_NOTHING);
+#endif
 
     // Catch errors here immediately, there might not be an error message if we're unlucky.
     if (gst_element_set_state(m_pipeline.get(), GST_STATE_PAUSED) == GST_STATE_CHANGE_FAILURE) {
-- 
2.16.2

