Subject: CVE-2020-0556

Description: It was discovered that the HID and HOGP profiles implementations in bluez before 5.54 don't specifically require bonding between the device and the host.
This creates an opportunity for a malicious device to connect to a target host to either impersonate an existing HID device without security or 
to cause an SDP or GATT service discovery to take place which would allow HID reports to be injected to the input subsystem from a non-bonded source.
This potentially enables an unauthenticated attacker with adjacent access to impersonate an existing HID device, cause a denial of service or escalate privileges.

Fix imported from commits 8cdbd3b09f29da29374e2f83369df24228da0ad1 and 3cccdbab2324086588df4ccf5f892fb3ce1f1787

Author: Alain Michaud <alainm@chromium.org> 2020-03-10 02:35:18
Committer Marcel Holtmann <marcel@holtmann.org> 2020-03-10 06:22:16
---
Index: bluez-5.48/profiles/input/device.c
===================================================================
--- bluez-5.48.orig/profiles/input/device.c
+++ bluez-5.48/profiles/input/device.c
@@ -95,6 +95,7 @@ struct input_device {
 
 static int idle_timeout = 0;
 static bool uhid_enabled = false;
+static bool br_bonded_only = false;
 
 void input_set_idle_timeout(int timeout)
 {
@@ -106,6 +107,11 @@ void input_enable_userspace_hid(bool sta
 	uhid_enabled = state;
 }
 
+void input_set_br_bonded_only(bool state)
+{
+	br_bonded_only = state;
+}
+
 static void input_device_enter_reconnect_mode(struct input_device *idev);
 static int connection_disconnect(struct input_device *idev, uint32_t flags);
 
@@ -974,8 +980,17 @@ static int hidp_add_connection(struct in
 	if (device_name_known(idev->device))
 		device_get_name(idev->device, req->name, sizeof(req->name));
 
+	/* Make sure the device is bonded if required */
+	if (br_bonded_only && !device_is_bonded(idev->device, btd_device_get_bdaddr_type(idev->device))) {
+		error("Rejected connection from !bonded device %s", dst_addr);
+		goto cleanup;
+	}
+
 	/* Encryption is mandatory for keyboards */
-	if (req->subclass & 0x40) {
+	/* Some platforms may choose to require encryption for all devices */
+	/* Note that this only matters for pre 2.1 devices as otherwise the */
+	/* device is encrypted by default by the lower layers */
+	if (br_bonded_only || req->subclass & 0x40) {
 		if (!bt_io_set(idev->intr_io, &gerr,
 					BT_IO_OPT_SEC_LEVEL, BT_IO_SEC_MEDIUM,
 					BT_IO_OPT_INVALID)) {
@@ -1207,6 +1222,10 @@ static void input_device_enter_reconnect
 	DBG("path=%s reconnect_mode=%s", idev->path,
 				reconnect_mode_to_string(idev->reconnect_mode));
 
+	/* Make sure the device is bonded if required */
+	if (br_bonded_only && !device_is_bonded(idev->device, btd_device_get_bdaddr_type(idev->device)))
+		return;
+
 	/* Only attempt an auto-reconnect when the device is required to
 	 * accept reconnections from the host.
 	 */
Index: bluez-5.48/profiles/input/device.h
===================================================================
--- bluez-5.48.orig/profiles/input/device.h
+++ bluez-5.48/profiles/input/device.h
@@ -29,6 +29,7 @@ struct input_conn;
 
 void input_set_idle_timeout(int timeout);
 void input_enable_userspace_hid(bool state);
+void input_set_br_bonded_only(bool state);
 
 int input_device_register(struct btd_service *service);
 void input_device_unregister(struct btd_service *service);
Index: bluez-5.48/profiles/input/hog.c
===================================================================
--- bluez-5.48.orig/profiles/input/hog.c
+++ bluez-5.48/profiles/input/hog.c
@@ -186,6 +186,10 @@ static int hog_accept(struct btd_service
 			return -EINVAL;
 	}
 
+	/* HOGP 1.0 Section 6.1 requires bonding */
+	if (!device_is_bonded(device, btd_device_get_bdaddr_type(device)))
+		return -ECONNREFUSED;
+
 	/* TODO: Replace GAttrib with bt_gatt_client */
 	bt_hog_attach(dev->hog, attrib);
 
Index: bluez-5.48/profiles/input/input.conf
===================================================================
--- bluez-5.48.orig/profiles/input/input.conf
+++ bluez-5.48/profiles/input/input.conf
@@ -11,3 +11,11 @@
 # Enable HID protocol handling in userspace input profile
 # Defaults to false (HIDP handled in HIDP kernel module)
 #UserspaceHID=true
+
+# Limit HID connections to bonded devices
+# The HID Profile does not specify that devices must be bonded, however some
+# platforms may want to make sure that input connections only come from bonded
+# device connections. Several older mice have been known for not supporting
+# pairing/encryption.
+# Defaults to false to maximize device compatibility.
+# BrBondedOnly=true
Index: bluez-5.48/profiles/input/manager.c
===================================================================
--- bluez-5.48.orig/profiles/input/manager.c
+++ bluez-5.48/profiles/input/manager.c
@@ -96,7 +96,7 @@ static int input_init(void)
 	config = load_config_file(CONFIGDIR "/input.conf");
 	if (config) {
 		int idle_timeout;
-		gboolean uhid_enabled;
+		gboolean uhid_enabled, br_bonded_only;
 
 		idle_timeout = g_key_file_get_integer(config, "General",
 							"IdleTimeout", &err);
@@ -114,6 +114,14 @@ static int input_init(void)
 			input_enable_userspace_hid(uhid_enabled);
 		} else
 			g_clear_error(&err);
+
+		br_bonded_only = g_key_file_get_boolean(config, "General", "BrBondedOnly", &err);
+
+		if (!err) {
+			DBG("input.conf: BrBondedOnly=%s", br_bonded_only ? "true" : "false");
+			input_set_br_bonded_only(br_bonded_only);
+		} else
+			g_clear_error(&err);
 	}
 
 	btd_profile_register(&input_profile);
