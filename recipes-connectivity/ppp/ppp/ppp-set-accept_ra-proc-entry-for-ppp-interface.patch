###################################################################
Date:   <Oct 11th 2021>
Source: Deutsche Telekom AG
Changes copyright 2020-2021 Deutsche Telekom AG
###################################################################
Index: ppp-2.4.8/pppd/sys-linux.c
===================================================================
--- ppp-2.4.8.orig/pppd/sys-linux.c
+++ ppp-2.4.8/pppd/sys-linux.c
@@ -258,6 +258,29 @@ extern int dfl_route_metric;
     memset ((char *) &(addr), '\0', sizeof(addr));	\
     addr.sa_family = (family);
 
+static int sysctl_iface_set(const char *path, const char *ifname, const char *content)
+{
+    FILE *fp = NULL;
+    char file[256] = {0};
+
+    if (ifname)
+        snprintf(file, sizeof(file), path, ifname);
+    else
+        snprintf(file, sizeof(file), path);
+
+    if ((fp = fopen(file, "wb")) == NULL) {
+        warn("Cannot open file %s", file);
+        return -1;
+    }
+    if (fwrite(content, strlen(content), 1, fp) != 1) {
+        warn("Fail to write %s", content);
+        fclose(fp);
+        return -1;
+    }
+    fclose(fp);
+    return 0;
+}
+
 /*
  * Determine if the PPP connection should still be present.
  */
@@ -2553,6 +2576,10 @@ static int setifstate (int u, int state)
 {
     struct ifreq ifr;
 
+    /* Set accept_ra proc entry of PPP interface to 2 before its brought up */
+    if (state)
+        sysctl_iface_set("/proc/sys/net/ipv6/conf/%s/accept_ra", ifname, "2");
+
     memset (&ifr, '\0', sizeof (ifr));
     strlcpy(ifr.ifr_name, ifname, sizeof (ifr.ifr_name));
     if (ioctl(sock_fd, SIOCGIFFLAGS, (caddr_t) &ifr) < 0) {
