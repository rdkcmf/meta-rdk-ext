From 5d0ab75493f07d472ddf0ebb308083c2300242bb Mon Sep 17 00:00:00 2001
From: Jaga <jagadheesan_duraisamy@comcast.com>
Date: Wed, 7 Apr 2021 12:04:53 +0000
Subject: [PATCH] openssl-1.1.x compatibility for dunfell

---
 src/mosquitto_passwd.c   | 14 ++++++++++++++
 src/read_handle_server.c |  5 +++++
 src/security_default.c   | 15 +++++++++++++++
 3 files changed, 34 insertions(+)

diff --git a/src/mosquitto_passwd.c b/src/mosquitto_passwd.c
index 4a9ffee..9ac4b1c 100644
--- a/src/mosquitto_passwd.c
+++ b/src/mosquitto_passwd.c
@@ -90,7 +90,11 @@ int output_new_password(FILE *fptr, const char *username, const char *password)
 	unsigned char hash[EVP_MAX_MD_SIZE];
 	unsigned int hash_len;
 	const EVP_MD *digest;
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
 	EVP_MD_CTX context;
+#else	
+	EVP_MD_CTX *context;
+#endif
 
 	rc = RAND_bytes(salt, SALT_LEN);
 	if(!rc){
@@ -113,12 +117,22 @@ int output_new_password(FILE *fptr, const char *username, const char *password)
 		return 1;
 	}
 
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
 	EVP_MD_CTX_init(&context);
 	EVP_DigestInit_ex(&context, digest, NULL);
 	EVP_DigestUpdate(&context, password, strlen(password));
 	EVP_DigestUpdate(&context, salt, SALT_LEN);
 	EVP_DigestFinal_ex(&context, hash, &hash_len);
 	EVP_MD_CTX_cleanup(&context);
+#else
+	context = EVP_MD_CTX_new();
+	EVP_MD_CTX_init(context);
+	EVP_DigestInit_ex(context, digest, NULL);
+	EVP_DigestUpdate(context, password, strlen(password));
+	EVP_DigestUpdate(context, salt, SALT_LEN);
+	EVP_DigestFinal_ex(context, hash, &hash_len);
+	EVP_MD_CTX_free(context);
+#endif
 
 	rc = base64_encode(hash, hash_len, &hash64);
 	if(rc){
diff --git a/src/read_handle_server.c b/src/read_handle_server.c
index 2b9c8f5..aec3b30 100644
--- a/src/read_handle_server.c
+++ b/src/read_handle_server.c
@@ -364,7 +364,12 @@ int mqtt3_handle_connect(struct mosquitto_db *db, struct mosquitto *context)
 				goto handle_connect_error;
 			}
 			name_entry = X509_NAME_get_entry(name, i);
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
 			context->username = _mosquitto_strdup((char *)ASN1_STRING_data(name_entry->value));
+#else
+			context->username = _mosquitto_strdup((char *)ASN1_STRING_data(X509_NAME_ENTRY_get_data(name_entry)));
+#endif
+
 			if(!context->username){
 				rc = 1;
 				goto handle_connect_error;
diff --git a/src/security_default.c b/src/security_default.c
index a1d3ec1..742772e 100644
--- a/src/security_default.c
+++ b/src/security_default.c
@@ -770,7 +770,11 @@ int mosquitto_psk_key_get_default(struct mosquitto_db *db, const char *hint, con
 int _pw_digest(const char *password, const unsigned char *salt, unsigned int salt_len, unsigned char *hash, unsigned int *hash_len)
 {
 	const EVP_MD *digest;
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
 	EVP_MD_CTX context;
+#else
+	EVP_MD_CTX *context;
+#endif
 
 	digest = EVP_get_digestbyname("sha512");
 	if(!digest){
@@ -778,6 +782,7 @@ int _pw_digest(const char *password, const unsigned char *salt, unsigned int sal
 		return 1;
 	}
 
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
 	EVP_MD_CTX_init(&context);
 	EVP_DigestInit_ex(&context, digest, NULL);
 	EVP_DigestUpdate(&context, password, strlen(password));
@@ -785,6 +790,16 @@ int _pw_digest(const char *password, const unsigned char *salt, unsigned int sal
 	/* hash is assumed to be EVP_MAX_MD_SIZE bytes long. */
 	EVP_DigestFinal_ex(&context, hash, hash_len);
 	EVP_MD_CTX_cleanup(&context);
+#else
+	context = EVP_MD_CTX_new();
+	EVP_MD_CTX_init(context);
+	EVP_DigestInit_ex(context, digest, NULL);
+	EVP_DigestUpdate(context, password, strlen(password));
+	EVP_DigestUpdate(context, salt, salt_len);
+	/* hash is assumed to be EVP_MAX_MD_SIZE bytes long. */
+	EVP_DigestFinal_ex(context, hash, hash_len);
+	EVP_MD_CTX_free(context);
+#endif
 
 	return MOSQ_ERR_SUCCESS;
 }
