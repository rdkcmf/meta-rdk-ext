###################################################################################################
Date: Mon, 17 Dec 2018 15:42:48 +0000
From 53ae15aca942c78b68ea3971ebb67f84bd32283e Mon Sep 17 00:00:00 2001
From: Ben Gray <ben.gray@sky.uk>
Subject: [PATCH] NGDEV-66485

This patch adds support for a new MGMT event sent by the kernel when the name of a
remote device is changed after said device is connected.  This is to fix an issue
a race issue in the kernel where the L2CAP connection is initiated by the remote
device before we've received the reply to name request.

This patch also requires a change in the kernel to generate name change event.


Source: SKY
Upstream-Status: Pending
Signed-off-by: Tijo Thomas John <tijo.thomas@sky.uk>
###################################################################################################

---
 lib/mgmt.h    |  9 +++++++
 src/adapter.c | 55 ++++++++++++++++++++++++++++++++++++++++
 2 files changed, 64 insertions(+)

diff --git a/lib/mgmt.h b/lib/mgmt.h
index 798a05e..0e05179 100644
--- a/lib/mgmt.h
+++ b/lib/mgmt.h
@@ -764,6 +764,15 @@ struct mgmt_ev_ext_info_changed {
 	uint8_t  eir[0];
 } __packed;
 
+/* [Sky] Added event to notify of remote device name change after connection */
+#define MGMT_EV_DEVICE_NAME_CHANGED 0x1000
+struct mgmt_ev_device_name_changed {
+	struct mgmt_addr_info addr;
+	uint16_t name_len;
+	uint8_t  name[0];
+} __packed;
+
+
 static const char *mgmt_op[] = {
 	"<0x0000>",
 	"Read Version",
diff --git a/src/adapter.c b/src/adapter.c
index b77aadc..d16446f 100755
--- a/src/adapter.c
+++ b/src/adapter.c
@@ -7970,6 +7970,55 @@ static void connected_callback(uint16_t index, uint16_t length,
 	eir_data_free(&eir_data);
 }
 
+/* [Sky] This mgmt event and handler were added to detect changes in a remote
+ * device's name after it has connected.
+ *
+ * This is a fix for NGDEV-66485.
+ */
+static void device_name_changed_callback(uint16_t index, uint16_t length,
+					const void *param, void *user_data)
+{
+	const struct mgmt_ev_device_name_changed *ev = param;
+	struct btd_adapter *adapter = user_data;
+	struct btd_device *device;
+	char name_buf[512];
+	uint16_t name_len;
+	char addr[18];
+
+	if (length < sizeof(*ev)) {
+		btd_error(adapter->dev_id, "Too small device name changed event");
+		return;
+	}
+
+	name_len = btohs(ev->name_len);
+	if (length < sizeof(*ev) + name_len) {
+		btd_error(adapter->dev_id, "Too small device name changed event");
+		return;
+	}
+	if (name_len > (sizeof(name_buf) - 2)) {
+		btd_error(adapter->dev_id, "Too big device name changed event");
+		return;
+	}
+
+	ba2str(&ev->addr.bdaddr, addr);
+
+	DBG("hci%u device %s name changed name_len %u", index, addr, name_len);
+
+	device = btd_adapter_get_device(adapter, &ev->addr.bdaddr,
+									ev->addr.type);
+	if (!device) {
+		btd_error(adapter->dev_id,
+				  "Unable to get device object for %s", addr);
+		return;
+	}
+
+	memcpy(name_buf, ev->name, name_len);
+	name_buf[name_len] = '\0';
+
+	device_store_cached_name(device, name_buf);
+	btd_device_device_set_name(device, name_buf);
+}
+
 static void device_blocked_callback(uint16_t index, uint16_t length,
 					const void *param, void *user_data)
 {
@@ -8510,6 +8559,12 @@ static void read_info_complete(uint8_t status, uint16_t length,
 						user_passkey_notify_callback,
 						adapter, NULL);
 
+	/* [Sky] Added mgmt event to notify of remote device name change */
+	mgmt_register(adapter->mgmt, MGMT_EV_DEVICE_NAME_CHANGED,
+						adapter->dev_id,
+						device_name_changed_callback,
+						adapter, NULL);
+
 	set_dev_class(adapter);
 
 	set_name(adapter, btd_adapter_get_name(adapter));
-- 
2.18.0

