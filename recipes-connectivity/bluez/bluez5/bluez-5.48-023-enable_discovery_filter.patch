###################################################################################################
Date: Mon, 17 Dec 2018 15:36:42 +0000
From 36d4eeb5946654ac3c493ed9d85f022dfd467023 Mon Sep 17 00:00:00 2001
From: Ben Gray <ben.gray@sky.uk>
Subject: [PATCH] This patch enabled the SetDiscoveryFilter(...) API for older
 kernels that lack the MGMT interface.  Without this patch the
 SetDiscoveryFilter() would have been immediately rejected, now we don't
 reject the API call, instead we only apply the filters that we can at the
 time discovery is started.

This effectively restores the limited discovery filtering that we had on
bluez 5.8.

Source: SKY
License: GPLv2+ & LGPLv2.1+
Upstream-Status: Pending
Signed-off-by: Tijo Thomas John <tijo.thomas@sky.uk>
###################################################################################################

---
 src/adapter.c | 34 ++++++++++++++++++++++++++++++++++
 1 file changed, 34 insertions(+)

diff --git a/src/adapter.c b/src/adapter.c
index ef2fe8f..b77aadc 100755
--- a/src/adapter.c
+++ b/src/adapter.c
@@ -1577,6 +1577,25 @@ static gboolean start_discovery_timeout(gpointer user_data)
 		return FALSE;
 	}
 
+	/* [Sky] Check the MGMT interface version, if on an old kernel and we don't
+	 * support MGMT_OP_START_SERVICE_DISCOVERY then we can still use the
+	 * discovery filter but only the scan type (either LE or BDR) part of the
+	 * filter can be used.
+	 */
+	if (MGMT_VERSION(mgmt_version, mgmt_revision) < MGMT_VERSION(1, 8)) {
+		struct mgmt_cp_start_discovery cp;
+
+		DBG("sending MGMT_OP_START_DISCOVERY %d",
+		    adapter->current_discovery_filter->type);
+
+		cp.type = adapter->current_discovery_filter->type;
+		mgmt_send(adapter->mgmt, MGMT_OP_START_DISCOVERY,
+				adapter->dev_id, sizeof(cp), &cp,
+				start_discovery_complete, adapter, NULL);
+		return FALSE;
+	}
+	
+
 	/* Filtered discovery is required */
 	sd_cp = adapter->current_discovery_filter;
 
@@ -2354,6 +2373,15 @@ static bool parse_discovery_filter_entry(char *key, DBusMessageIter *value,
 			return parser->func(value, filter);
 	}
 
+	/* [Sky] the IdleTime parameter was added in the original port of the scan
+	 * filter code, however it is no longer needed as this version of bluez
+	 * implements a 0 time delay if a filter is present (see no_scan_restart_delay)
+	 * So to maintain backwards compatability we accept this parameter but
+	 * ignore it.
+	 */
+	if (!strcmp("IdleTime", key))
+		return true;
+
 	DBG("Unknown key parameter: %s!\n", key);
 	return false;
 }
@@ -2451,8 +2479,14 @@ static DBusMessage *set_discovery_filter(DBusConnection *conn,
 	if (!(adapter->current_settings & MGMT_SETTING_POWERED))
 		return btd_error_not_ready(msg);
 
+	/* [Sky] remove this check here, instead we delay it till the point when
+	 * the MGMT interface is invoked, this allows us to do limited filtering
+	 * if on an old MGMT / Kernel version.
+	 */
+#if 0
 	if (MGMT_VERSION(mgmt_version, mgmt_revision) < MGMT_VERSION(1, 8))
 		return btd_error_not_supported(msg);
+#endif
 
 	/* parse parameters */
 	if (!parse_discovery_filter_dict(adapter, &discovery_filter, msg))
-- 
2.18.0

